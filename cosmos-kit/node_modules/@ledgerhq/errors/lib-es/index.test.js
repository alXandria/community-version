import { AmountRequired } from "./index";
function functionA() {
    throw new AmountRequired();
}
describe("custom errors", function () {
    test("error name", function () {
        try {
            functionA();
        }
        catch (e) {
            expect(e.name).toEqual("AmountRequired");
        }
    });
    test("error is correctly located at the functionA", function () {
        try {
            functionA();
        }
        catch (e) {
            var i = e.stack.indexOf("functionA");
            expect(e.stack.slice(0, i + 9)).toEqual("AmountRequired: AmountRequired\n    at functionA");
        }
    });
    test("error with custom message", function () {
        try {
            throw new AmountRequired("YO");
        }
        catch (e) {
            expect(e.message).toEqual("YO");
        }
    });
    test("error with custom fields", function () {
        try {
            throw new AmountRequired("YO", { foo: 42 });
        }
        catch (e) {
            expect(e.foo).toEqual(42);
        }
    });
    test("error.cause", function () {
        try {
            functionA();
        }
        catch (cause) {
            try {
                throw new AmountRequired("YO", { foo: 42 }, { cause: cause });
            }
            catch (e) {
                expect(e.cause).toMatchObject(new AmountRequired());
            }
        }
    });
    test("error instanceof", function () {
        try {
            functionA();
        }
        catch (e) {
            expect(e).toBeInstanceOf(AmountRequired);
        }
    });
    test("promise error instanceof", function () {
        expect(Promise.reject(new AmountRequired())).rejects.toBeInstanceOf(AmountRequired);
    });
});
//# sourceMappingURL=index.test.js.map