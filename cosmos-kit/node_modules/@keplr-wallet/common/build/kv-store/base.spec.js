"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const memory_1 = require("./memory");
describe("Test kvstore", () => {
    test("kvstore should not conflict", () => __awaiter(void 0, void 0, void 0, function* () {
        const test1KVStore = new memory_1.MemoryKVStore("test1");
        const test2KVStore = new memory_1.MemoryKVStore("test2");
        const key = "key";
        yield test1KVStore.set(key, "test1");
        let valueFromTest2 = yield test2KVStore.get(key);
        expect(valueFromTest2).toBe(undefined);
        yield test2KVStore.set(key, "test2");
        const valueFromTest1 = yield test1KVStore.get(key);
        valueFromTest2 = yield test2KVStore.get(key);
        expect(valueFromTest1).toBe("test1");
        expect(valueFromTest2).toBe("test2");
    }));
});
//# sourceMappingURL=base.spec.js.map