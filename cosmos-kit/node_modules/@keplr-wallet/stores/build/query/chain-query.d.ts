import { ObservableQuery } from "../common";
import { KVStore } from "@keplr-wallet/common";
import { AxiosInstance } from "axios";
import { ChainGetter } from "../common";
import { HasMapStore } from "../common";
export declare class ObservableChainQuery<T = unknown, E = unknown> extends ObservableQuery<T, E> {
    protected readonly _chainId: string;
    protected readonly chainGetter: ChainGetter;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, url: string);
    protected get instance(): AxiosInstance;
    get chainId(): string;
}
export declare class ObservableChainQueryMap<T = unknown, E = unknown> extends HasMapStore<ObservableChainQuery<T, E>> {
    protected readonly kvStore: KVStore;
    protected readonly chainId: string;
    protected readonly chainGetter: ChainGetter;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, creater: (key: string) => ObservableChainQuery<T, E>);
}
