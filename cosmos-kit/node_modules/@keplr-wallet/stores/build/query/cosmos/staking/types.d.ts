import { CoinPrimitive } from "../../../common";
export declare type Rewards = {
    rewards: DelegatorReward[] | null;
    total: CoinPrimitive[];
};
export declare type DelegatorReward = {
    validator_address: string;
    reward: CoinPrimitive[] | null;
};
export declare type Delegations = {
    delegation_responses: Delegation[];
};
export declare type Delegation = {
    delegation: {
        delegator_address: string;
        validator_address: string;
        shares: string;
    };
    balance: {
        denom: string;
        amount: string;
    };
};
export declare type UnbondingDelegations = {
    unbonding_responses: UnbondingDelegation[];
};
export declare type UnbondingDelegation = {
    delegator_address: string;
    validator_address: string;
    entries: [
        {
            creation_height: string;
            completion_time: string;
            initial_balance: string;
            balance: string;
        }
    ];
};
export declare type Validator = {
    operator_address: string;
    consensus_pubkey: {
        "@type": string;
        key: string;
    };
    jailed: boolean;
    status: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
    tokens: string;
    delegator_shares: string;
    description: {
        moniker?: string;
        identity?: string;
        website?: string;
        security_contact?: string;
        details?: string;
    };
    unbonding_height: string;
    unbonding_time: string;
    commission: {
        commission_rates: {
            rate: string;
            max_rate: string;
            max_change_rate: string;
        };
        update_time: string;
    };
    min_self_delegation: string;
};
export declare type Validators = {
    validators: Validator[];
};
export declare enum BondStatus {
    Unbonded = "Unbonded",
    Unbonding = "Unbonding",
    Bonded = "Bonded",
    Unspecified = "Unspecified"
}
export declare type StakingParams = {
    params: {
        unbonding_time: string;
        max_validators: number;
        max_entries: number;
        historical_entries: number;
        bond_denom: string;
    };
};
export declare type StakingPool = {
    pool: {
        not_bonded_tokens: string;
        bonded_tokens: string;
    };
};
