import { ObservableChainQuery, ObservableChainQueryMap } from "../../chain-query";
import { ProposalVoter } from "./types";
import { KVStore } from "@keplr-wallet/common";
import { ChainGetter } from "../../../common";
export declare class ObservableQueryProposalVoteInner extends ObservableChainQuery<ProposalVoter> {
    protected proposalId: string;
    protected bech32Address: string;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, proposalsId: string, bech32Address: string);
    get vote(): "Yes" | "Abstain" | "No" | "NoWithVeto" | "Unspecified";
    protected canFetch(): boolean;
}
export declare class ObservableQueryProposalVote extends ObservableChainQueryMap<ProposalVoter> {
    protected readonly kvStore: KVStore;
    protected readonly chainId: string;
    protected readonly chainGetter: ChainGetter;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter);
    getVote(proposalId: string, voter: string): ObservableQueryProposalVoteInner;
}
