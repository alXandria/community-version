"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableQueryProposalVote = exports.ObservableQueryProposalVoteInner = void 0;
const chain_query_1 = require("../../chain-query");
class ObservableQueryProposalVoteInner extends chain_query_1.ObservableChainQuery {
    constructor(kvStore, chainId, chainGetter, proposalsId, bech32Address) {
        super(kvStore, chainId, chainGetter, `/cosmos/gov/v1beta1/proposals/${proposalsId}/votes/${bech32Address}`);
        this.proposalId = proposalsId;
        this.bech32Address = bech32Address;
    }
    get vote() {
        if (!this.response) {
            return "Unspecified";
        }
        switch (this.response.data.vote.option) {
            case "VOTE_OPTION_YES":
                return "Yes";
            case "VOTE_OPTION_ABSTAIN":
                return "Abstain";
            case "VOTE_OPTION_NO":
                return "No";
            case "VOTE_OPTION_NO_WITH_VETO":
                return "NoWithVeto";
            default:
                return "Unspecified";
        }
    }
    canFetch() {
        // If bech32 address is empty, it will always fail, so don't need to fetch it.
        return this.bech32Address.length > 0;
    }
}
exports.ObservableQueryProposalVoteInner = ObservableQueryProposalVoteInner;
class ObservableQueryProposalVote extends chain_query_1.ObservableChainQueryMap {
    constructor(kvStore, chainId, chainGetter) {
        super(kvStore, chainId, chainGetter, (param) => {
            const { proposalId, voter } = JSON.parse(param);
            return new ObservableQueryProposalVoteInner(this.kvStore, this.chainId, this.chainGetter, proposalId, voter);
        });
        this.kvStore = kvStore;
        this.chainId = chainId;
        this.chainGetter = chainGetter;
    }
    getVote(proposalId, voter) {
        const param = JSON.stringify({
            proposalId,
            voter,
        });
        return this.get(param);
    }
}
exports.ObservableQueryProposalVote = ObservableQueryProposalVote;
//# sourceMappingURL=vote.js.map