"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableQuerySupplyTotal = exports.ObservableChainQuerySupplyTotal = void 0;
const chain_query_1 = require("../../chain-query");
class ObservableChainQuerySupplyTotal extends chain_query_1.ObservableChainQuery {
    constructor(kvStore, chainId, chainGetter, denom) {
        super(kvStore, chainId, chainGetter, `/cosmos/bank/v1beta1/supply/${denom}`);
    }
}
exports.ObservableChainQuerySupplyTotal = ObservableChainQuerySupplyTotal;
class ObservableQuerySupplyTotal extends chain_query_1.ObservableChainQueryMap {
    constructor(kvStore, chainId, chainGetter) {
        super(kvStore, chainId, chainGetter, (denom) => {
            return new ObservableChainQuerySupplyTotal(this.kvStore, this.chainId, this.chainGetter, denom);
        });
        this.kvStore = kvStore;
        this.chainId = chainId;
        this.chainGetter = chainGetter;
    }
    getQueryDenom(denom) {
        return this.get(denom);
    }
    getQueryStakeDenom() {
        const chainInfo = this.chainGetter.getChain(this.chainId);
        return this.get(chainInfo.stakeCurrency.coinMinimalDenom);
    }
}
exports.ObservableQuerySupplyTotal = ObservableQuerySupplyTotal;
//# sourceMappingURL=supply.js.map