"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableQueryOsmosisEpochProvisions = void 0;
const chain_query_1 = require("../../../chain-query");
const mobx_1 = require("mobx");
const unit_1 = require("@keplr-wallet/unit");
class ObservableQueryOsmosisEpochProvisions extends chain_query_1.ObservableChainQuery {
    constructor(kvStore, chainId, chainGetter, queryMintParmas) {
        super(kvStore, chainId, chainGetter, `/osmosis/mint/v1beta1/epoch_provisions`);
        this.queryMintParmas = queryMintParmas;
        mobx_1.makeObservable(this);
    }
    get epochProvisions() {
        if (!this.response || !this.queryMintParmas.mintDenom) {
            return;
        }
        const chainInfo = this.chainGetter.getChain(this.chainId);
        const currency = chainInfo.currencies.find((cur) => cur.coinMinimalDenom === this.queryMintParmas.mintDenom);
        if (!currency) {
            throw new Error("Unknown currency");
        }
        let provision = this.response.data.epoch_provisions;
        if (provision.includes(".")) {
            provision = provision.slice(0, provision.indexOf("."));
        }
        return new unit_1.CoinPretty(currency, new unit_1.Int(provision));
    }
}
__decorate([
    mobx_1.computed
], ObservableQueryOsmosisEpochProvisions.prototype, "epochProvisions", null);
exports.ObservableQueryOsmosisEpochProvisions = ObservableQueryOsmosisEpochProvisions;
//# sourceMappingURL=epoch-provisions.js.map