"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableQuerySifchainLiquidityAPY = void 0;
const common_1 = require("../../../common");
const axios_1 = __importDefault(require("axios"));
const mobx_1 = require("mobx");
class ObservableQuerySifchainLiquidityAPY extends common_1.ObservableQuery {
    constructor(kvStore, chainId) {
        const instance = axios_1.default.create({
            baseURL: "https://data.sifchain.finance/",
        });
        super(kvStore, instance, `beta/validator/stakingRewards`);
        this.chainId = chainId;
        mobx_1.makeObservable(this);
    }
    canFetch() {
        return this.chainId.startsWith("sifchain");
    }
    get liquidityAPY() {
        if (this.response) {
            return Number(this.response.data.rate) * 100;
        }
        return 0;
    }
}
__decorate([
    mobx_1.computed
], ObservableQuerySifchainLiquidityAPY.prototype, "liquidityAPY", null);
exports.ObservableQuerySifchainLiquidityAPY = ObservableQuerySifchainLiquidityAPY;
//# sourceMappingURL=sifchain.js.map