import { KVStore } from "@keplr-wallet/common";
import { ObservableChainQuery, ObservableChainQueryMap } from "../../chain-query";
import { ChainGetter } from "../../../common";
import { ClientStateResponse } from "./types";
export declare class ObservableChainQueryClientState extends ObservableChainQuery<ClientStateResponse> {
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, portId: string, channelId: string);
    /**
     * clientChainId returns the chain id of the client state if the client state's type is known (currently, only tendermint is supported).
     */
    get clientChainId(): string | undefined;
}
export declare class ObservableQueryIBCClientState extends ObservableChainQueryMap<ClientStateResponse> {
    protected readonly kvStore: KVStore;
    protected readonly chainId: string;
    protected readonly chainGetter: ChainGetter;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter);
    getClientStateOnTransferPort(channelId: string): ObservableChainQueryClientState;
    getClientState(portId: string, channelId: string): ObservableChainQueryClientState;
}
