import { DenomHelper, KVStore } from "@keplr-wallet/common";
import { ChainGetter } from "../../common";
import { CoinPretty } from "@keplr-wallet/unit";
import { BalanceRegistry, ObservableQueryBalanceInner } from "../balances";
import { Cw20ContractBalance } from "./types";
import { ObservableCosmwasmContractChainQuery } from "./contract-query";
export declare class ObservableQueryCw20Balance extends ObservableCosmwasmContractChainQuery<Cw20ContractBalance> {
    protected readonly contractAddress: string;
    protected readonly bech32Address: string;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, contractAddress: string, bech32Address: string);
    protected canFetch(): boolean;
}
export declare class ObservableQueryCw20BalanceInner extends ObservableQueryBalanceInner {
    protected readonly bech32Address: string;
    protected readonly queryCw20Balance: ObservableQueryCw20Balance;
    constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter, denomHelper: DenomHelper, bech32Address: string);
    protected canFetch(): boolean;
    fetch(): Generator<Generator<unknown, any, any>, void, unknown>;
    get balance(): CoinPretty;
}
export declare class ObservableQueryCw20BalanceRegistry implements BalanceRegistry {
    protected readonly kvStore: KVStore;
    constructor(kvStore: KVStore);
    getBalanceInner(chainId: string, chainGetter: ChainGetter, bech32Address: string, minimalDenom: string): ObservableQueryBalanceInner | undefined;
}
