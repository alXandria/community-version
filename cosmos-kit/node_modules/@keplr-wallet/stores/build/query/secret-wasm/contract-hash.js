"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableQuerySecretContractCodeHash = exports.ObservableQuerySecretContractCodeHashInner = void 0;
const chain_query_1 = require("../chain-query");
class ObservableQuerySecretContractCodeHashInner extends chain_query_1.ObservableChainQuery {
    constructor(kvStore, chainId, chainGetter, contractAddress) {
        super(kvStore, chainId, chainGetter, `/wasm/contract/${contractAddress}/code-hash`);
        this.contractAddress = contractAddress;
    }
    canFetch() {
        return this.contractAddress.length > 0;
    }
}
exports.ObservableQuerySecretContractCodeHashInner = ObservableQuerySecretContractCodeHashInner;
class ObservableQuerySecretContractCodeHash extends chain_query_1.ObservableChainQueryMap {
    constructor(kvStore, chainId, chainGetter) {
        super(kvStore, chainId, chainGetter, (contractAddress) => {
            return new ObservableQuerySecretContractCodeHashInner(this.kvStore, this.chainId, this.chainGetter, contractAddress);
        });
        this.kvStore = kvStore;
        this.chainId = chainId;
        this.chainGetter = chainGetter;
    }
    getQueryContract(contractAddress) {
        return this.get(contractAddress);
    }
}
exports.ObservableQuerySecretContractCodeHash = ObservableQuerySecretContractCodeHash;
//# sourceMappingURL=contract-hash.js.map