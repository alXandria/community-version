import { KVStore } from "@keplr-wallet/common";
import { Channel } from "./types";
import { HasMapStore } from "../common";
export declare class IBCChannelStoreInner {
    protected readonly kvStore: KVStore;
    protected readonly chainId: string;
    protected channelMap: Map<string, Map<string, Channel>>;
    constructor(kvStore: KVStore, chainId: string);
    getTransferChannels(): Channel[];
    readonly getChannelsToPort: (portId: string) => Channel[];
    readonly getChannel: (portId: string, channelId: string) => Channel | undefined;
    addChannel(channel: Channel): Generator<Promise<void>, void, unknown>;
    protected loadChannels(): Generator<Promise<{
        [portId: string]: {
            [channelId: string]: Channel;
        };
    } | undefined>, void, {
        [portId: string]: {
            [channelId: string]: Channel;
        };
    } | undefined>;
    saveChannels(): Promise<void>;
}
/**
 * IBCChannelStore saves the IBC channel infomations to the storage.
 */
export declare class IBCChannelStore extends HasMapStore<IBCChannelStoreInner> {
    protected readonly kvStore: KVStore;
    constructor(kvStore: KVStore);
    get(chainId: string): IBCChannelStoreInner;
}
