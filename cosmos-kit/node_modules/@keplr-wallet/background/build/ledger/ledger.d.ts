import { TransportIniter } from "./options";
export declare enum LedgerInitErrorOn {
    Transport = 0,
    App = 1,
    Unknown = 2
}
export declare const LedgerWebUSBIniter: TransportIniter;
export declare const LedgerWebHIDIniter: TransportIniter;
export declare class LedgerInitError extends Error {
    readonly errorOn: LedgerInitErrorOn;
    constructor(errorOn: LedgerInitErrorOn, message?: string);
}
export declare class Ledger {
    private readonly cosmosApp;
    constructor(cosmosApp: any);
    static init(transportIniter: TransportIniter, initArgs?: any[]): Promise<Ledger>;
    getVersion(): Promise<{
        deviceLocked: boolean;
        major: number;
        minor: number;
        patch: number;
        targetId: string;
        testMode: boolean;
    }>;
    getPublicKey(path: number[]): Promise<Uint8Array>;
    sign(path: number[], message: Uint8Array): Promise<Uint8Array>;
    close(): Promise<void>;
    static isWebHIDSupported(): Promise<boolean>;
}
