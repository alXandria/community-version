"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoveSuggestedChainInfoMsg = exports.SuggestChainInfoMsg = exports.GetChainInfosMsg = void 0;
const router_1 = require("@keplr-wallet/router");
const constants_1 = require("./constants");
class GetChainInfosMsg extends router_1.Message {
    static type() {
        return "get-chain-infos";
    }
    validateBasic() {
        // noop
    }
    route() {
        return constants_1.ROUTE;
    }
    type() {
        return GetChainInfosMsg.type();
    }
}
exports.GetChainInfosMsg = GetChainInfosMsg;
class SuggestChainInfoMsg extends router_1.Message {
    constructor(chainInfo) {
        super();
        this.chainInfo = chainInfo;
    }
    static type() {
        return "suggest-chain-info";
    }
    validateBasic() {
        if (!this.chainInfo) {
            throw new router_1.KeplrError("chains", 100, "Chain info not set");
        }
    }
    approveExternal() {
        return true;
    }
    route() {
        return constants_1.ROUTE;
    }
    type() {
        return SuggestChainInfoMsg.type();
    }
}
exports.SuggestChainInfoMsg = SuggestChainInfoMsg;
class RemoveSuggestedChainInfoMsg extends router_1.Message {
    constructor(chainId) {
        super();
        this.chainId = chainId;
    }
    static type() {
        return "remove-suggested-chain-info";
    }
    validateBasic() {
        if (!this.chainId) {
            throw new router_1.KeplrError("chains", 101, "Chain id not set");
        }
    }
    route() {
        return constants_1.ROUTE;
    }
    type() {
        return RemoveSuggestedChainInfoMsg.type();
    }
}
exports.RemoveSuggestedChainInfoMsg = RemoveSuggestedChainInfoMsg;
//# sourceMappingURL=messages.js.map