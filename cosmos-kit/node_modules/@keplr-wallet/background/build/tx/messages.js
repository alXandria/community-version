"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendTxMsg = void 0;
const router_1 = require("@keplr-wallet/router");
const constants_1 = require("./constants");
// Return the tx hash
class SendTxMsg extends router_1.Message {
    constructor(chainId, tx, mode) {
        super();
        this.chainId = chainId;
        this.tx = tx;
        this.mode = mode;
    }
    static type() {
        return "send-tx-to-background";
    }
    validateBasic() {
        if (!this.chainId) {
            throw new router_1.KeplrError("tx", 100, "chain id is empty");
        }
        if (!this.tx) {
            throw new router_1.KeplrError("tx", 101, "tx is empty");
        }
        if (!this.mode ||
            (this.mode !== "sync" && this.mode !== "async" && this.mode !== "block")) {
            throw new router_1.KeplrError("tx", 120, "invalid mode");
        }
    }
    approveExternal() {
        return true;
    }
    route() {
        return constants_1.ROUTE;
    }
    type() {
        return SendTxMsg.type();
    }
}
exports.SendTxMsg = SendTxMsg;
//# sourceMappingURL=messages.js.map