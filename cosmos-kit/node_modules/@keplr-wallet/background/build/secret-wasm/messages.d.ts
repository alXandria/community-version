import { Message } from "@keplr-wallet/router";
export declare class GetPubkeyMsg extends Message<Uint8Array> {
    readonly chainId: string;
    static type(): string;
    constructor(chainId: string);
    validateBasic(): void;
    approveExternal(): boolean;
    route(): string;
    type(): string;
}
export declare class ReqeustEncryptMsg extends Message<Uint8Array> {
    readonly chainId: string;
    readonly contractCodeHash: string;
    readonly msg: object;
    static type(): string;
    constructor(chainId: string, contractCodeHash: string, msg: object);
    validateBasic(): void;
    approveExternal(): boolean;
    route(): string;
    type(): string;
}
export declare class RequestDecryptMsg extends Message<Uint8Array> {
    readonly chainId: string;
    readonly cipherText: Uint8Array;
    readonly nonce: Uint8Array;
    static type(): string;
    constructor(chainId: string, cipherText: Uint8Array, nonce: Uint8Array);
    validateBasic(): void;
    approveExternal(): boolean;
    route(): string;
    type(): string;
}
export declare class GetTxEncryptionKeyMsg extends Message<Uint8Array> {
    readonly chainId: string;
    readonly nonce: Uint8Array;
    static type(): string;
    constructor(chainId: string, nonce: Uint8Array);
    validateBasic(): void;
    approveExternal(): boolean;
    route(): string;
    type(): string;
}
