import { Message } from "@keplr-wallet/router";
import { AppCurrency } from "@keplr-wallet/types";
export declare class GetTokensMsg extends Message<AppCurrency[]> {
    readonly chainId: string;
    static type(): string;
    constructor(chainId: string);
    validateBasic(): void;
    route(): string;
    type(): string;
}
export declare class SuggestTokenMsg extends Message<void> {
    readonly chainId: string;
    readonly contractAddress: string;
    readonly viewingKey?: string | undefined;
    static type(): string;
    constructor(chainId: string, contractAddress: string, viewingKey?: string | undefined);
    approveExternal(): boolean;
    validateBasic(): void;
    route(): string;
    type(): string;
}
export declare class AddTokenMsg extends Message<void> {
    readonly chainId: string;
    readonly currency: AppCurrency;
    static type(): string;
    constructor(chainId: string, currency: AppCurrency);
    validateBasic(): void;
    route(): string;
    type(): string;
}
export declare class RemoveTokenMsg extends Message<void> {
    readonly chainId: string;
    readonly currency: AppCurrency;
    static type(): string;
    constructor(chainId: string, currency: AppCurrency);
    validateBasic(): void;
    route(): string;
    type(): string;
}
export declare class GetSecret20ViewingKey extends Message<string> {
    readonly chainId: string;
    readonly contractAddress: string;
    static type(): string;
    constructor(chainId: string, contractAddress: string);
    validateBasic(): void;
    approveExternal(): boolean;
    route(): string;
    type(): string;
}
