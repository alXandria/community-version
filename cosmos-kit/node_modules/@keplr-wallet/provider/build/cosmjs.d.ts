import { OfflineSigner, AccountData, AminoSignResponse, StdSignDoc } from "@cosmjs/launchpad";
import { Keplr } from "@keplr-wallet/types";
import { OfflineDirectSigner } from "@cosmjs/proto-signing";
import { DirectSignResponse } from "@cosmjs/proto-signing/build/signer";
import { SignDoc } from "@cosmjs/proto-signing/build/codec/cosmos/tx/v1beta1/tx";
export declare class CosmJSOfflineSignerOnlyAmino implements OfflineSigner {
    protected readonly chainId: string;
    protected readonly keplr: Keplr;
    constructor(chainId: string, keplr: Keplr);
    getAccounts(): Promise<AccountData[]>;
    signAmino(signerAddress: string, signDoc: StdSignDoc): Promise<AminoSignResponse>;
    sign(signerAddress: string, signDoc: StdSignDoc): Promise<AminoSignResponse>;
}
export declare class CosmJSOfflineSigner extends CosmJSOfflineSignerOnlyAmino implements OfflineSigner, OfflineDirectSigner {
    protected readonly chainId: string;
    protected readonly keplr: Keplr;
    constructor(chainId: string, keplr: Keplr);
    signDirect(signerAddress: string, signDoc: SignDoc): Promise<DirectSignResponse>;
}
