import { AminoConverter, Coin } from "@cosmjs/stargate";
/**
 * @see https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/types.proto#L30-L35
 */
declare type AccessConfig = never;
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L28-L40
 */
export interface AminoMsgStoreCode {
    type: "wasm/MsgStoreCode";
    value: {
        /** Bech32 account address */
        readonly sender: string;
        /** Base64 encoded Wasm */
        readonly wasm_byte_code: string;
        /** A valid URI reference to the contract's source code. Can be empty. */
        readonly source: string;
        /** A docker tag. Can be empty. */
        readonly builder: string;
        readonly instantiate_permission?: AccessConfig;
    };
}
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L70-L80
 */
export interface AminoMsgExecuteContract {
    type: "wasm/MsgExecuteContract";
    value: {
        /** Bech32 account address */
        readonly sender: string;
        /** Bech32 account address */
        readonly contract: string;
        /** Handle message as JavaScript object */
        readonly msg: any;
        readonly funds: readonly Coin[];
    };
}
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L47-L61
 */
export interface AminoMsgInstantiateContract {
    type: "wasm/MsgInstantiateContract";
    value: {
        /** Bech32 account address */
        readonly sender: string;
        /** ID of the Wasm code that was uploaded before */
        readonly code_id: string;
        /** Human-readable label for this contract */
        readonly label: string;
        /** Init message as JavaScript object */
        readonly init_msg: any;
        readonly funds: readonly Coin[];
        /** Bech32-encoded admin address */
        readonly admin?: string;
    };
}
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L88-L98
 */
export interface AminoMsgMigrateContract {
    type: "wasm/MsgMigrateContract";
    value: {
        /** Bech32 account address */
        readonly sender: string;
        /** Bech32 account address */
        readonly contract: string;
        /** The new code */
        readonly code_id: string;
        /** Migrate message as JavaScript object */
        readonly msg: any;
    };
}
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L107-L115
 */
export interface AminoMsgUpdateAdmin {
    type: "wasm/MsgUpdateAdmin";
    value: {
        /** Bech32-encoded sender address. This must be the old admin. */
        readonly sender: string;
        /** Bech32-encoded contract address to be updated */
        readonly contract: string;
        /** Bech32-encoded address of the new admin */
        readonly new_admin: string;
    };
}
/**
 * The Amino JSON representation of
 * https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha2/proto/cosmwasm/wasm/v1beta1/tx.proto#L120-L126
 */
export interface AminoMsgClearAdmin {
    type: "wasm/MsgClearAdmin";
    value: {
        /** Bech32-encoded sender address. This must be the old admin. */
        readonly sender: string;
        /** Bech32-encoded contract address to be updated */
        readonly contract: string;
    };
}
export declare const cosmWasmTypes: Record<string, AminoConverter>;
export {};
