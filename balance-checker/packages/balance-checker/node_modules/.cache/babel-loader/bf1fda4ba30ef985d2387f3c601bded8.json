{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultValueProducer = void 0; // allows pre-producing values before anyone is listening\n\nclass DefaultValueProducer {\n  constructor(value, callbacks) {\n    this.callbacks = callbacks;\n    this.internalValue = value;\n  }\n\n  get value() {\n    return this.internalValue;\n  }\n  /**\n   * Update the current value.\n   *\n   * If producer is active (i.e. someone is listening), this emits an event.\n   * If not, just the current value is updated.\n   */\n\n\n  update(value) {\n    this.internalValue = value;\n\n    if (this.listener) {\n      this.listener.next(value);\n    }\n  }\n  /**\n   * Produce an error\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\n  error(error) {\n    if (this.listener) {\n      this.listener.error(error);\n    }\n  }\n  /**\n   * Called by the stream. Do not call this directly.\n   */\n\n\n  start(listener) {\n    this.listener = listener;\n    listener.next(this.internalValue);\n\n    if (this.callbacks) {\n      this.callbacks.onStarted();\n    }\n  }\n  /**\n   * Called by the stream. Do not call this directly.\n   */\n\n\n  stop() {\n    if (this.callbacks) {\n      this.callbacks.onStop();\n    }\n\n    this.listener = undefined;\n  }\n\n}\n\nexports.DefaultValueProducer = DefaultValueProducer;","map":{"version":3,"sources":["../src/defaultvalueproducer.ts"],"names":[],"mappings":";;;;;uCAOA;;AACA,MAAa,oBAAb,CAAiC;AAS/B,EAAA,WAAA,CAAmB,KAAnB,EAA6B,SAA7B,EAAuE;AACrE,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,aAAL,GAAqB,KAArB;AACD;;AAXD,MAAW,KAAX,GAAgB;AACd,WAAO,KAAK,aAAZ;AACD;AAWD;;;;;;;;AAMO,EAAA,MAAM,CAAC,KAAD,EAAS;AACpB,SAAK,aAAL,GAAqB,KAArB;;AACA,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,CAAc,IAAd,CAAmB,KAAnB;AACD;AACF;AAED;;;AAGA;;;AACO,EAAA,KAAK,CAAC,KAAD,EAAW;AACrB,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,CAAc,KAAd,CAAoB,KAApB;AACD;AACF;AAED;;;;;AAGO,EAAA,KAAK,CAAC,QAAD,EAAsB;AAChC,SAAK,QAAL,GAAgB,QAAhB;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,KAAK,aAAnB;;AAEA,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,SAAf;AACD;AACF;AAED;;;;;AAGO,EAAA,IAAI,GAAA;AACT,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,MAAf;AACD;;AACD,SAAK,QAAL,GAAgB,SAAhB;AACD;;AAzD8B;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nclass DefaultValueProducer {\n    constructor(value, callbacks) {\n        this.callbacks = callbacks;\n        this.internalValue = value;\n    }\n    get value() {\n        return this.internalValue;\n    }\n    /**\n     * Update the current value.\n     *\n     * If producer is active (i.e. someone is listening), this emits an event.\n     * If not, just the current value is updated.\n     */\n    update(value) {\n        this.internalValue = value;\n        if (this.listener) {\n            this.listener.next(value);\n        }\n    }\n    /**\n     * Produce an error\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    error(error) {\n        if (this.listener) {\n            this.listener.error(error);\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    start(listener) {\n        this.listener = listener;\n        listener.next(this.internalValue);\n        if (this.callbacks) {\n            this.callbacks.onStarted();\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    stop() {\n        if (this.callbacks) {\n            this.callbacks.onStop();\n        }\n        this.listener = undefined;\n    }\n}\nexports.DefaultValueProducer = DefaultValueProducer;\n//# sourceMappingURL=defaultvalueproducer.js.map"]},"metadata":{},"sourceType":"script"}