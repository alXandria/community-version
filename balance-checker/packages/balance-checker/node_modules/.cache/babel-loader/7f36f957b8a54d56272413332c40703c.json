{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst any_1 = require(\"../../../google/protobuf/any\");\n\nconst signing_1 = require(\"../../../cosmos/tx/signing/v1beta1/signing\");\n\nconst multisig_1 = require(\"../../../cosmos/crypto/multisig/v1beta1/multisig\");\n\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nconst baseTx = {};\nexports.Tx = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.body !== undefined) {\n      exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.authInfo !== undefined) {\n      exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n    }\n\n    for (const v of message.signatures) {\n      writer.uint32(26).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseTx);\n    message.signatures = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.body = exports.TxBody.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseTx);\n    message.signatures = [];\n\n    if (object.body !== undefined && object.body !== null) {\n      message.body = exports.TxBody.fromJSON(object.body);\n    } else {\n      message.body = undefined;\n    }\n\n    if (object.authInfo !== undefined && object.authInfo !== null) {\n      message.authInfo = exports.AuthInfo.fromJSON(object.authInfo);\n    } else {\n      message.authInfo = undefined;\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n    message.authInfo !== undefined && (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseTx);\n    message.signatures = [];\n\n    if (object.body !== undefined && object.body !== null) {\n      message.body = exports.TxBody.fromPartial(object.body);\n    } else {\n      message.body = undefined;\n    }\n\n    if (object.authInfo !== undefined && object.authInfo !== null) {\n      message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);\n    } else {\n      message.authInfo = undefined;\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseTxRaw = {};\nexports.TxRaw = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n\n    for (const v of message.signatures) {\n      writer.uint32(26).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseTxRaw);\n    message.signatures = [];\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseTxRaw);\n    message.signatures = [];\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = bytesFromBase64(object.bodyBytes);\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseTxRaw);\n    message.signatures = [];\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = object.bodyBytes;\n    } else {\n      message.bodyBytes = new Uint8Array();\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = object.authInfoBytes;\n    } else {\n      message.authInfoBytes = new Uint8Array();\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseSignDoc = {\n  chainId: \"\",\n  accountNumber: long_1.default.UZERO\n};\nexports.SignDoc = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n\n    if (message.chainId !== \"\") {\n      writer.uint32(26).string(message.chainId);\n    }\n\n    if (!message.accountNumber.isZero()) {\n      writer.uint32(32).uint64(message.accountNumber);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignDoc);\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n\n        case 3:\n          message.chainId = reader.string();\n          break;\n\n        case 4:\n          message.accountNumber = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignDoc);\n    message.bodyBytes = new Uint8Array();\n    message.authInfoBytes = new Uint8Array();\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = bytesFromBase64(object.bodyBytes);\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n    }\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = String(object.chainId);\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.accountNumber !== undefined && object.accountNumber !== null) {\n      message.accountNumber = long_1.default.fromString(object.accountNumber);\n    } else {\n      message.accountNumber = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.bodyBytes !== undefined && (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n    message.authInfoBytes !== undefined && (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.accountNumber !== undefined && (obj.accountNumber = (message.accountNumber || long_1.default.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignDoc);\n\n    if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n      message.bodyBytes = object.bodyBytes;\n    } else {\n      message.bodyBytes = new Uint8Array();\n    }\n\n    if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n      message.authInfoBytes = object.authInfoBytes;\n    } else {\n      message.authInfoBytes = new Uint8Array();\n    }\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = object.chainId;\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.accountNumber !== undefined && object.accountNumber !== null) {\n      message.accountNumber = object.accountNumber;\n    } else {\n      message.accountNumber = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseTxBody = {\n  memo: \"\",\n  timeoutHeight: long_1.default.UZERO\n};\nexports.TxBody = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.messages) {\n      any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.memo !== \"\") {\n      writer.uint32(18).string(message.memo);\n    }\n\n    if (!message.timeoutHeight.isZero()) {\n      writer.uint32(24).uint64(message.timeoutHeight);\n    }\n\n    for (const v of message.extensionOptions) {\n      any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();\n    }\n\n    for (const v of message.nonCriticalExtensionOptions) {\n      any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseTxBody);\n    message.messages = [];\n    message.extensionOptions = [];\n    message.nonCriticalExtensionOptions = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.memo = reader.string();\n          break;\n\n        case 3:\n          message.timeoutHeight = reader.uint64();\n          break;\n\n        case 1023:\n          message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        case 2047:\n          message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseTxBody);\n    message.messages = [];\n    message.extensionOptions = [];\n    message.nonCriticalExtensionOptions = [];\n\n    if (object.messages !== undefined && object.messages !== null) {\n      for (const e of object.messages) {\n        message.messages.push(any_1.Any.fromJSON(e));\n      }\n    }\n\n    if (object.memo !== undefined && object.memo !== null) {\n      message.memo = String(object.memo);\n    } else {\n      message.memo = \"\";\n    }\n\n    if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n      message.timeoutHeight = long_1.default.fromString(object.timeoutHeight);\n    } else {\n      message.timeoutHeight = long_1.default.UZERO;\n    }\n\n    if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n      for (const e of object.extensionOptions) {\n        message.extensionOptions.push(any_1.Any.fromJSON(e));\n      }\n    }\n\n    if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n      for (const e of object.nonCriticalExtensionOptions) {\n        message.nonCriticalExtensionOptions.push(any_1.Any.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.messages) {\n      obj.messages = message.messages.map(e => e ? any_1.Any.toJSON(e) : undefined);\n    } else {\n      obj.messages = [];\n    }\n\n    message.memo !== undefined && (obj.memo = message.memo);\n    message.timeoutHeight !== undefined && (obj.timeoutHeight = (message.timeoutHeight || long_1.default.UZERO).toString());\n\n    if (message.extensionOptions) {\n      obj.extensionOptions = message.extensionOptions.map(e => e ? any_1.Any.toJSON(e) : undefined);\n    } else {\n      obj.extensionOptions = [];\n    }\n\n    if (message.nonCriticalExtensionOptions) {\n      obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map(e => e ? any_1.Any.toJSON(e) : undefined);\n    } else {\n      obj.nonCriticalExtensionOptions = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseTxBody);\n    message.messages = [];\n    message.extensionOptions = [];\n    message.nonCriticalExtensionOptions = [];\n\n    if (object.messages !== undefined && object.messages !== null) {\n      for (const e of object.messages) {\n        message.messages.push(any_1.Any.fromPartial(e));\n      }\n    }\n\n    if (object.memo !== undefined && object.memo !== null) {\n      message.memo = object.memo;\n    } else {\n      message.memo = \"\";\n    }\n\n    if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n      message.timeoutHeight = object.timeoutHeight;\n    } else {\n      message.timeoutHeight = long_1.default.UZERO;\n    }\n\n    if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n      for (const e of object.extensionOptions) {\n        message.extensionOptions.push(any_1.Any.fromPartial(e));\n      }\n    }\n\n    if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n      for (const e of object.nonCriticalExtensionOptions) {\n        message.nonCriticalExtensionOptions.push(any_1.Any.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseAuthInfo = {};\nexports.AuthInfo = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.signerInfos) {\n      exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.fee !== undefined) {\n      exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.fee = exports.Fee.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    if (object.signerInfos !== undefined && object.signerInfos !== null) {\n      for (const e of object.signerInfos) {\n        message.signerInfos.push(exports.SignerInfo.fromJSON(e));\n      }\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = exports.Fee.fromJSON(object.fee);\n    } else {\n      message.fee = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.signerInfos) {\n      obj.signerInfos = message.signerInfos.map(e => e ? exports.SignerInfo.toJSON(e) : undefined);\n    } else {\n      obj.signerInfos = [];\n    }\n\n    message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseAuthInfo);\n    message.signerInfos = [];\n\n    if (object.signerInfos !== undefined && object.signerInfos !== null) {\n      for (const e of object.signerInfos) {\n        message.signerInfos.push(exports.SignerInfo.fromPartial(e));\n      }\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = exports.Fee.fromPartial(object.fee);\n    } else {\n      message.fee = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseSignerInfo = {\n  sequence: long_1.default.UZERO\n};\nexports.SignerInfo = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.modeInfo !== undefined) {\n      exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignerInfo);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignerInfo);\n\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromJSON(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n\n    if (object.modeInfo !== undefined && object.modeInfo !== null) {\n      message.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);\n    } else {\n      message.modeInfo = undefined;\n    }\n\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = long_1.default.fromString(object.sequence);\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.modeInfo !== undefined && (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignerInfo);\n\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromPartial(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n\n    if (object.modeInfo !== undefined && object.modeInfo !== null) {\n      message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);\n    } else {\n      message.modeInfo = undefined;\n    }\n\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = object.sequence;\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseModeInfo = {};\nexports.ModeInfo = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.single !== undefined) {\n      exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.multi !== undefined) {\n      exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseModeInfo);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseModeInfo);\n\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.ModeInfo_Single.fromJSON(object.single);\n    } else {\n      message.single = undefined;\n    }\n\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.ModeInfo_Multi.fromJSON(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseModeInfo);\n\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.ModeInfo_Single.fromPartial(object.single);\n    } else {\n      message.single = undefined;\n    }\n\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseModeInfo_Single = {\n  mode: 0\n};\nexports.ModeInfo_Single = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseModeInfo_Single);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseModeInfo_Single);\n\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = signing_1.signModeFromJSON(object.mode);\n    } else {\n      message.mode = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signing_1.signModeToJSON(message.mode));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseModeInfo_Single);\n\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = object.mode;\n    } else {\n      message.mode = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseModeInfo_Multi = {};\nexports.ModeInfo_Multi = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.modeInfos) {\n      exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseModeInfo_Multi);\n    message.modeInfos = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseModeInfo_Multi);\n    message.modeInfos = [];\n\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n\n    if (object.modeInfos !== undefined && object.modeInfos !== null) {\n      for (const e of object.modeInfos) {\n        message.modeInfos.push(exports.ModeInfo.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n\n    if (message.modeInfos) {\n      obj.modeInfos = message.modeInfos.map(e => e ? exports.ModeInfo.toJSON(e) : undefined);\n    } else {\n      obj.modeInfos = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseModeInfo_Multi);\n    message.modeInfos = [];\n\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n\n    if (object.modeInfos !== undefined && object.modeInfos !== null) {\n      for (const e of object.modeInfos) {\n        message.modeInfos.push(exports.ModeInfo.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseFee = {\n  gasLimit: long_1.default.UZERO,\n  payer: \"\",\n  granter: \"\"\n};\nexports.Fee = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.amount) {\n      coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (!message.gasLimit.isZero()) {\n      writer.uint32(16).uint64(message.gasLimit);\n    }\n\n    if (message.payer !== \"\") {\n      writer.uint32(26).string(message.payer);\n    }\n\n    if (message.granter !== \"\") {\n      writer.uint32(34).string(message.granter);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.gasLimit = reader.uint64();\n          break;\n\n        case 3:\n          message.payer = reader.string();\n          break;\n\n        case 4:\n          message.granter = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      for (const e of object.amount) {\n        message.amount.push(coin_1.Coin.fromJSON(e));\n      }\n    }\n\n    if (object.gasLimit !== undefined && object.gasLimit !== null) {\n      message.gasLimit = long_1.default.fromString(object.gasLimit);\n    } else {\n      message.gasLimit = long_1.default.UZERO;\n    }\n\n    if (object.payer !== undefined && object.payer !== null) {\n      message.payer = String(object.payer);\n    } else {\n      message.payer = \"\";\n    }\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.amount) {\n      obj.amount = message.amount.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.amount = [];\n    }\n\n    message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || long_1.default.UZERO).toString());\n    message.payer !== undefined && (obj.payer = message.payer);\n    message.granter !== undefined && (obj.granter = message.granter);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseFee);\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      for (const e of object.amount) {\n        message.amount.push(coin_1.Coin.fromPartial(e));\n      }\n    }\n\n    if (object.gasLimit !== undefined && object.gasLimit !== null) {\n      message.gasLimit = object.gasLimit;\n    } else {\n      message.gasLimit = long_1.default.UZERO;\n    }\n\n    if (object.payer !== undefined && object.payer !== null) {\n      message.payer = object.payer;\n    } else {\n      message.payer = \"\";\n    }\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../../src/codec/cosmos/tx/v1beta1/tx.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fee = exports.ModeInfo_Multi = exports.ModeInfo_Single = exports.ModeInfo = exports.SignerInfo = exports.AuthInfo = exports.TxBody = exports.SignDoc = exports.TxRaw = exports.Tx = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst signing_1 = require(\"../../../cosmos/tx/signing/v1beta1/signing\");\nconst multisig_1 = require(\"../../../cosmos/crypto/multisig/v1beta1/multisig\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.tx.v1beta1\";\nconst baseTx = {};\nexports.Tx = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.body !== undefined) {\n            exports.TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.authInfo !== undefined) {\n            exports.AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseTx);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.body = exports.TxBody.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.authInfo = exports.AuthInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseTx);\n        message.signatures = [];\n        if (object.body !== undefined && object.body !== null) {\n            message.body = exports.TxBody.fromJSON(object.body);\n        }\n        else {\n            message.body = undefined;\n        }\n        if (object.authInfo !== undefined && object.authInfo !== null) {\n            message.authInfo = exports.AuthInfo.fromJSON(object.authInfo);\n        }\n        else {\n            message.authInfo = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.body !== undefined && (obj.body = message.body ? exports.TxBody.toJSON(message.body) : undefined);\n        message.authInfo !== undefined &&\n            (obj.authInfo = message.authInfo ? exports.AuthInfo.toJSON(message.authInfo) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseTx);\n        message.signatures = [];\n        if (object.body !== undefined && object.body !== null) {\n            message.body = exports.TxBody.fromPartial(object.body);\n        }\n        else {\n            message.body = undefined;\n        }\n        if (object.authInfo !== undefined && object.authInfo !== null) {\n            message.authInfo = exports.AuthInfo.fromPartial(object.authInfo);\n        }\n        else {\n            message.authInfo = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseTxRaw = {};\nexports.TxRaw = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        for (const v of message.signatures) {\n            writer.uint32(26).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseTxRaw);\n        message.signatures = [];\n        message.bodyBytes = new Uint8Array();\n        message.authInfoBytes = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.signatures.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseTxRaw);\n        message.signatures = [];\n        message.bodyBytes = new Uint8Array();\n        message.authInfoBytes = new Uint8Array();\n        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n            message.bodyBytes = bytesFromBase64(object.bodyBytes);\n        }\n        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n            message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseTxRaw);\n        message.signatures = [];\n        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n            message.bodyBytes = object.bodyBytes;\n        }\n        else {\n            message.bodyBytes = new Uint8Array();\n        }\n        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n            message.authInfoBytes = object.authInfoBytes;\n        }\n        else {\n            message.authInfoBytes = new Uint8Array();\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseSignDoc = { chainId: \"\", accountNumber: long_1.default.UZERO };\nexports.SignDoc = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.bodyBytes.length !== 0) {\n            writer.uint32(10).bytes(message.bodyBytes);\n        }\n        if (message.authInfoBytes.length !== 0) {\n            writer.uint32(18).bytes(message.authInfoBytes);\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(26).string(message.chainId);\n        }\n        if (!message.accountNumber.isZero()) {\n            writer.uint32(32).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSignDoc);\n        message.bodyBytes = new Uint8Array();\n        message.authInfoBytes = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bodyBytes = reader.bytes();\n                    break;\n                case 2:\n                    message.authInfoBytes = reader.bytes();\n                    break;\n                case 3:\n                    message.chainId = reader.string();\n                    break;\n                case 4:\n                    message.accountNumber = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSignDoc);\n        message.bodyBytes = new Uint8Array();\n        message.authInfoBytes = new Uint8Array();\n        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n            message.bodyBytes = bytesFromBase64(object.bodyBytes);\n        }\n        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n            message.authInfoBytes = bytesFromBase64(object.authInfoBytes);\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = long_1.default.fromString(object.accountNumber);\n        }\n        else {\n            message.accountNumber = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bodyBytes !== undefined &&\n            (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));\n        message.authInfoBytes !== undefined &&\n            (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = (message.accountNumber || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSignDoc);\n        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {\n            message.bodyBytes = object.bodyBytes;\n        }\n        else {\n            message.bodyBytes = new Uint8Array();\n        }\n        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {\n            message.authInfoBytes = object.authInfoBytes;\n        }\n        else {\n            message.authInfoBytes = new Uint8Array();\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nconst baseTxBody = { memo: \"\", timeoutHeight: long_1.default.UZERO };\nexports.TxBody = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.messages) {\n            any_1.Any.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.memo !== \"\") {\n            writer.uint32(18).string(message.memo);\n        }\n        if (!message.timeoutHeight.isZero()) {\n            writer.uint32(24).uint64(message.timeoutHeight);\n        }\n        for (const v of message.extensionOptions) {\n            any_1.Any.encode(v, writer.uint32(8186).fork()).ldelim();\n        }\n        for (const v of message.nonCriticalExtensionOptions) {\n            any_1.Any.encode(v, writer.uint32(16378).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseTxBody);\n        message.messages = [];\n        message.extensionOptions = [];\n        message.nonCriticalExtensionOptions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.messages.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.memo = reader.string();\n                    break;\n                case 3:\n                    message.timeoutHeight = reader.uint64();\n                    break;\n                case 1023:\n                    message.extensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                case 2047:\n                    message.nonCriticalExtensionOptions.push(any_1.Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseTxBody);\n        message.messages = [];\n        message.extensionOptions = [];\n        message.nonCriticalExtensionOptions = [];\n        if (object.messages !== undefined && object.messages !== null) {\n            for (const e of object.messages) {\n                message.messages.push(any_1.Any.fromJSON(e));\n            }\n        }\n        if (object.memo !== undefined && object.memo !== null) {\n            message.memo = String(object.memo);\n        }\n        else {\n            message.memo = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = long_1.default.fromString(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = long_1.default.UZERO;\n        }\n        if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n            for (const e of object.extensionOptions) {\n                message.extensionOptions.push(any_1.Any.fromJSON(e));\n            }\n        }\n        if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n            for (const e of object.nonCriticalExtensionOptions) {\n                message.nonCriticalExtensionOptions.push(any_1.Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.messages) {\n            obj.messages = message.messages.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.messages = [];\n        }\n        message.memo !== undefined && (obj.memo = message.memo);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = (message.timeoutHeight || long_1.default.UZERO).toString());\n        if (message.extensionOptions) {\n            obj.extensionOptions = message.extensionOptions.map((e) => (e ? any_1.Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.extensionOptions = [];\n        }\n        if (message.nonCriticalExtensionOptions) {\n            obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map((e) => e ? any_1.Any.toJSON(e) : undefined);\n        }\n        else {\n            obj.nonCriticalExtensionOptions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseTxBody);\n        message.messages = [];\n        message.extensionOptions = [];\n        message.nonCriticalExtensionOptions = [];\n        if (object.messages !== undefined && object.messages !== null) {\n            for (const e of object.messages) {\n                message.messages.push(any_1.Any.fromPartial(e));\n            }\n        }\n        if (object.memo !== undefined && object.memo !== null) {\n            message.memo = object.memo;\n        }\n        else {\n            message.memo = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = object.timeoutHeight;\n        }\n        else {\n            message.timeoutHeight = long_1.default.UZERO;\n        }\n        if (object.extensionOptions !== undefined && object.extensionOptions !== null) {\n            for (const e of object.extensionOptions) {\n                message.extensionOptions.push(any_1.Any.fromPartial(e));\n            }\n        }\n        if (object.nonCriticalExtensionOptions !== undefined && object.nonCriticalExtensionOptions !== null) {\n            for (const e of object.nonCriticalExtensionOptions) {\n                message.nonCriticalExtensionOptions.push(any_1.Any.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAuthInfo = {};\nexports.AuthInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.signerInfos) {\n            exports.SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.fee !== undefined) {\n            exports.Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseAuthInfo);\n        message.signerInfos = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signerInfos.push(exports.SignerInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.fee = exports.Fee.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseAuthInfo);\n        message.signerInfos = [];\n        if (object.signerInfos !== undefined && object.signerInfos !== null) {\n            for (const e of object.signerInfos) {\n                message.signerInfos.push(exports.SignerInfo.fromJSON(e));\n            }\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = exports.Fee.fromJSON(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.signerInfos) {\n            obj.signerInfos = message.signerInfos.map((e) => (e ? exports.SignerInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signerInfos = [];\n        }\n        message.fee !== undefined && (obj.fee = message.fee ? exports.Fee.toJSON(message.fee) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseAuthInfo);\n        message.signerInfos = [];\n        if (object.signerInfos !== undefined && object.signerInfos !== null) {\n            for (const e of object.signerInfos) {\n                message.signerInfos.push(exports.SignerInfo.fromPartial(e));\n            }\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = exports.Fee.fromPartial(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    },\n};\nconst baseSignerInfo = { sequence: long_1.default.UZERO };\nexports.SignerInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.publicKey !== undefined) {\n            any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.modeInfo !== undefined) {\n            exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n        }\n        if (!message.sequence.isZero()) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSignerInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.publicKey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfo = exports.ModeInfo.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.sequence = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSignerInfo);\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromJSON(object.publicKey);\n        }\n        else {\n            message.publicKey = undefined;\n        }\n        if (object.modeInfo !== undefined && object.modeInfo !== null) {\n            message.modeInfo = exports.ModeInfo.fromJSON(object.modeInfo);\n        }\n        else {\n            message.modeInfo = undefined;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = long_1.default.fromString(object.sequence);\n        }\n        else {\n            message.sequence = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.publicKey !== undefined &&\n            (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n        message.modeInfo !== undefined &&\n            (obj.modeInfo = message.modeInfo ? exports.ModeInfo.toJSON(message.modeInfo) : undefined);\n        message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSignerInfo);\n        if (object.publicKey !== undefined && object.publicKey !== null) {\n            message.publicKey = any_1.Any.fromPartial(object.publicKey);\n        }\n        else {\n            message.publicKey = undefined;\n        }\n        if (object.modeInfo !== undefined && object.modeInfo !== null) {\n            message.modeInfo = exports.ModeInfo.fromPartial(object.modeInfo);\n        }\n        else {\n            message.modeInfo = undefined;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nconst baseModeInfo = {};\nexports.ModeInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.single !== undefined) {\n            exports.ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.multi !== undefined) {\n            exports.ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseModeInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.single = exports.ModeInfo_Single.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.multi = exports.ModeInfo_Multi.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseModeInfo);\n        if (object.single !== undefined && object.single !== null) {\n            message.single = exports.ModeInfo_Single.fromJSON(object.single);\n        }\n        else {\n            message.single = undefined;\n        }\n        if (object.multi !== undefined && object.multi !== null) {\n            message.multi = exports.ModeInfo_Multi.fromJSON(object.multi);\n        }\n        else {\n            message.multi = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.single !== undefined &&\n            (obj.single = message.single ? exports.ModeInfo_Single.toJSON(message.single) : undefined);\n        message.multi !== undefined &&\n            (obj.multi = message.multi ? exports.ModeInfo_Multi.toJSON(message.multi) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseModeInfo);\n        if (object.single !== undefined && object.single !== null) {\n            message.single = exports.ModeInfo_Single.fromPartial(object.single);\n        }\n        else {\n            message.single = undefined;\n        }\n        if (object.multi !== undefined && object.multi !== null) {\n            message.multi = exports.ModeInfo_Multi.fromPartial(object.multi);\n        }\n        else {\n            message.multi = undefined;\n        }\n        return message;\n    },\n};\nconst baseModeInfo_Single = { mode: 0 };\nexports.ModeInfo_Single = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.mode !== 0) {\n            writer.uint32(8).int32(message.mode);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseModeInfo_Single);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mode = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseModeInfo_Single);\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = signing_1.signModeFromJSON(object.mode);\n        }\n        else {\n            message.mode = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mode !== undefined && (obj.mode = signing_1.signModeToJSON(message.mode));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseModeInfo_Single);\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = 0;\n        }\n        return message;\n    },\n};\nconst baseModeInfo_Multi = {};\nexports.ModeInfo_Multi = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.bitarray !== undefined) {\n            multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.modeInfos) {\n            exports.ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseModeInfo_Multi);\n        message.modeInfos = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.modeInfos.push(exports.ModeInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseModeInfo_Multi);\n        message.modeInfos = [];\n        if (object.bitarray !== undefined && object.bitarray !== null) {\n            message.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n        }\n        else {\n            message.bitarray = undefined;\n        }\n        if (object.modeInfos !== undefined && object.modeInfos !== null) {\n            for (const e of object.modeInfos) {\n                message.modeInfos.push(exports.ModeInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.bitarray !== undefined &&\n            (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n        if (message.modeInfos) {\n            obj.modeInfos = message.modeInfos.map((e) => (e ? exports.ModeInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.modeInfos = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseModeInfo_Multi);\n        message.modeInfos = [];\n        if (object.bitarray !== undefined && object.bitarray !== null) {\n            message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n        }\n        else {\n            message.bitarray = undefined;\n        }\n        if (object.modeInfos !== undefined && object.modeInfos !== null) {\n            for (const e of object.modeInfos) {\n                message.modeInfos.push(exports.ModeInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFee = { gasLimit: long_1.default.UZERO, payer: \"\", granter: \"\" };\nexports.Fee = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.amount) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (!message.gasLimit.isZero()) {\n            writer.uint32(16).uint64(message.gasLimit);\n        }\n        if (message.payer !== \"\") {\n            writer.uint32(26).string(message.payer);\n        }\n        if (message.granter !== \"\") {\n            writer.uint32(34).string(message.granter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseFee);\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.gasLimit = reader.uint64();\n                    break;\n                case 3:\n                    message.payer = reader.string();\n                    break;\n                case 4:\n                    message.granter = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseFee);\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(coin_1.Coin.fromJSON(e));\n            }\n        }\n        if (object.gasLimit !== undefined && object.gasLimit !== null) {\n            message.gasLimit = long_1.default.fromString(object.gasLimit);\n        }\n        else {\n            message.gasLimit = long_1.default.UZERO;\n        }\n        if (object.payer !== undefined && object.payer !== null) {\n            message.payer = String(object.payer);\n        }\n        else {\n            message.payer = \"\";\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.gasLimit !== undefined && (obj.gasLimit = (message.gasLimit || long_1.default.UZERO).toString());\n        message.payer !== undefined && (obj.payer = message.payer);\n        message.granter !== undefined && (obj.granter = message.granter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseFee);\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(coin_1.Coin.fromPartial(e));\n            }\n        }\n        if (object.gasLimit !== undefined && object.gasLimit !== null) {\n            message.gasLimit = object.gasLimit;\n        }\n        else {\n            message.gasLimit = long_1.default.UZERO;\n        }\n        if (object.payer !== undefined && object.payer !== null) {\n            message.payer = object.payer;\n        }\n        else {\n            message.payer = \"\";\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=tx.js.map"]},"metadata":{},"sourceType":"script"}