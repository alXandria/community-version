{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || \"condition is not truthy\");\n  }\n}\n\nexports.assert = assert;\n\nfunction assertDefined(value, msg) {\n  if (value === undefined) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : \"value is undefined\");\n  }\n}\n\nexports.assertDefined = assertDefined;\n\nfunction assertDefinedAndNotNull(value, msg) {\n  if (value === undefined || value === null) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : \"value is undefined or null\");\n  }\n}\n\nexports.assertDefinedAndNotNull = assertDefinedAndNotNull;","map":{"version":3,"sources":["../src/assert.ts"],"names":[],"mappings":";;;;;mFAAA;;AACA,SAAgB,MAAhB,CAAuB,SAAvB,EAAuC,GAAvC,EAAmD;AACjD,MAAI,CAAC,SAAL,EAAgB;AACd,UAAM,IAAI,KAAJ,CAAU,GAAG,IAAI,yBAAjB,CAAN;AACD;AACF;;AAJD,OAAA,CAAA,MAAA,GAAA,MAAA;;AAMA,SAAgB,aAAhB,CAAiC,KAAjC,EAAuD,GAAvD,EAAmE;AACjE,MAAI,KAAK,KAAK,SAAd,EAAyB;AACvB,UAAM,IAAI,KAAJ,CAAU,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAA,GAAA,GAAO,oBAAjB,CAAN;AACD;AACF;;AAJD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAMA,SAAgB,uBAAhB,CAA2C,KAA3C,EAAwE,GAAxE,EAAoF;AAClF,MAAI,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,IAArC,EAA2C;AACzC,UAAM,IAAI,KAAJ,CAAU,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAA,GAAA,GAAO,4BAAjB,CAAN;AACD;AACF;;AAJD,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg || \"condition is not truthy\");\n    }\n}\nexports.assert = assert;\nfunction assertDefined(value, msg) {\n    if (value === undefined) {\n        throw new Error(msg !== null && msg !== void 0 ? msg : \"value is undefined\");\n    }\n}\nexports.assertDefined = assertDefined;\nfunction assertDefinedAndNotNull(value, msg) {\n    if (value === undefined || value === null) {\n        throw new Error(msg !== null && msg !== void 0 ? msg : \"value is undefined or null\");\n    }\n}\nexports.assertDefinedAndNotNull = assertDefinedAndNotNull;\n//# sourceMappingURL=assert.js.map"]},"metadata":{},"sourceType":"script"}