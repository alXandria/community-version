{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst keys_1 = require(\"../../tendermint/crypto/keys\");\n\nexports.protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = {\n  totalVotingPower: long_1.default.ZERO\n};\nexports.ValidatorSet = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.validators) {\n      exports.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proposer !== undefined) {\n      exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.totalVotingPower.isZero()) {\n      writer.uint32(24).int64(message.totalVotingPower);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validators.push(exports.Validator.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.proposer = exports.Validator.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.totalVotingPower = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(exports.Validator.fromJSON(e));\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = exports.Validator.fromJSON(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = long_1.default.fromString(object.totalVotingPower);\n    } else {\n      message.totalVotingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.validators) {\n      obj.validators = message.validators.map(e => e ? exports.Validator.toJSON(e) : undefined);\n    } else {\n      obj.validators = [];\n    }\n\n    message.proposer !== undefined && (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : undefined);\n    message.totalVotingPower !== undefined && (obj.totalVotingPower = (message.totalVotingPower || long_1.default.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseValidatorSet);\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(exports.Validator.fromPartial(e));\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = exports.Validator.fromPartial(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = object.totalVotingPower;\n    } else {\n      message.totalVotingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidator = {\n  votingPower: long_1.default.ZERO,\n  proposerPriority: long_1.default.ZERO\n};\nexports.Validator = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n\n    if (message.pubKey !== undefined) {\n      keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (!message.votingPower.isZero()) {\n      writer.uint32(24).int64(message.votingPower);\n    }\n\n    if (!message.proposerPriority.isZero()) {\n      writer.uint32(32).int64(message.proposerPriority);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValidator);\n    message.address = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n\n        case 2:\n          message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.votingPower = reader.int64();\n          break;\n\n        case 4:\n          message.proposerPriority = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValidator);\n    message.address = new Uint8Array();\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = bytesFromBase64(object.address);\n    }\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = long_1.default.fromString(object.votingPower);\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = long_1.default.fromString(object.proposerPriority);\n    } else {\n      message.proposerPriority = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n    message.proposerPriority !== undefined && (obj.proposerPriority = (message.proposerPriority || long_1.default.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseValidator);\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = new Uint8Array();\n    }\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = object.proposerPriority;\n    } else {\n      message.proposerPriority = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseSimpleValidator = {\n  votingPower: long_1.default.ZERO\n};\nexports.SimpleValidator = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.pubKey !== undefined) {\n      keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (!message.votingPower.isZero()) {\n      writer.uint32(16).int64(message.votingPower);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSimpleValidator);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.votingPower = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseSimpleValidator);\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = long_1.default.fromString(object.votingPower);\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseSimpleValidator);\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/codec/tendermint/types/validator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleValidator = exports.Validator = exports.ValidatorSet = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst keys_1 = require(\"../../tendermint/crypto/keys\");\nexports.protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: long_1.default.ZERO };\nexports.ValidatorSet = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.validators) {\n            exports.Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            exports.Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (!message.totalVotingPower.isZero()) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidatorSet);\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(exports.Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidatorSet);\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = exports.Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = long_1.default.fromString(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer ? exports.Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValidatorSet);\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = exports.Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: long_1.default.ZERO, proposerPriority: long_1.default.ZERO };\nexports.Validator = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (!message.votingPower.isZero()) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (!message.proposerPriority.isZero()) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidator);\n        message.address = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = reader.int64();\n                    break;\n                case 4:\n                    message.proposerPriority = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidator);\n        message.address = new Uint8Array();\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = long_1.default.fromString(object.votingPower);\n        }\n        else {\n            message.votingPower = long_1.default.ZERO;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = long_1.default.fromString(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = (message.proposerPriority || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValidator);\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = long_1.default.ZERO;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: long_1.default.ZERO };\nexports.SimpleValidator = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (!message.votingPower.isZero()) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSimpleValidator);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSimpleValidator);\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = long_1.default.fromString(object.votingPower);\n        }\n        else {\n            message.votingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = (message.votingPower || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSimpleValidator);\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=validator.js.map"]},"metadata":{},"sourceType":"script"}