{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst types_1 = require(\"../../../tendermint/types/types\");\n\nconst any_1 = require(\"../../../google/protobuf/any\");\n\nconst duration_1 = require(\"../../../google/protobuf/duration\");\n\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\n\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\n\nvar BondStatus;\n\n(function (BondStatus) {\n  /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n  BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n  /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n  /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n  /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n\n  BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n  BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\n\nfunction bondStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"BOND_STATUS_UNSPECIFIED\":\n      return BondStatus.BOND_STATUS_UNSPECIFIED;\n\n    case 1:\n    case \"BOND_STATUS_UNBONDED\":\n      return BondStatus.BOND_STATUS_UNBONDED;\n\n    case 2:\n    case \"BOND_STATUS_UNBONDING\":\n      return BondStatus.BOND_STATUS_UNBONDING;\n\n    case 3:\n    case \"BOND_STATUS_BONDED\":\n      return BondStatus.BOND_STATUS_BONDED;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return BondStatus.UNRECOGNIZED;\n  }\n}\n\nexports.bondStatusFromJSON = bondStatusFromJSON;\n\nfunction bondStatusToJSON(object) {\n  switch (object) {\n    case BondStatus.BOND_STATUS_UNSPECIFIED:\n      return \"BOND_STATUS_UNSPECIFIED\";\n\n    case BondStatus.BOND_STATUS_UNBONDED:\n      return \"BOND_STATUS_UNBONDED\";\n\n    case BondStatus.BOND_STATUS_UNBONDING:\n      return \"BOND_STATUS_UNBONDING\";\n\n    case BondStatus.BOND_STATUS_BONDED:\n      return \"BOND_STATUS_BONDED\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexports.bondStatusToJSON = bondStatusToJSON;\nconst baseHistoricalInfo = {};\nexports.HistoricalInfo = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.header !== undefined) {\n      types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.valset) {\n      exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.header = types_1.Header.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.valset.push(exports.Validator.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = types_1.Header.fromJSON(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.valset !== undefined && object.valset !== null) {\n      for (const e of object.valset) {\n        message.valset.push(exports.Validator.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n\n    if (message.valset) {\n      obj.valset = message.valset.map(e => e ? exports.Validator.toJSON(e) : undefined);\n    } else {\n      obj.valset = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = types_1.Header.fromPartial(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.valset !== undefined && object.valset !== null) {\n      for (const e of object.valset) {\n        message.valset.push(exports.Validator.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseCommissionRates = {\n  rate: \"\",\n  maxRate: \"\",\n  maxChangeRate: \"\"\n};\nexports.CommissionRates = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.rate !== \"\") {\n      writer.uint32(10).string(message.rate);\n    }\n\n    if (message.maxRate !== \"\") {\n      writer.uint32(18).string(message.maxRate);\n    }\n\n    if (message.maxChangeRate !== \"\") {\n      writer.uint32(26).string(message.maxChangeRate);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommissionRates);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.rate = reader.string();\n          break;\n\n        case 2:\n          message.maxRate = reader.string();\n          break;\n\n        case 3:\n          message.maxChangeRate = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommissionRates);\n\n    if (object.rate !== undefined && object.rate !== null) {\n      message.rate = String(object.rate);\n    } else {\n      message.rate = \"\";\n    }\n\n    if (object.maxRate !== undefined && object.maxRate !== null) {\n      message.maxRate = String(object.maxRate);\n    } else {\n      message.maxRate = \"\";\n    }\n\n    if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n      message.maxChangeRate = String(object.maxChangeRate);\n    } else {\n      message.maxChangeRate = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.rate !== undefined && (obj.rate = message.rate);\n    message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n    message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommissionRates);\n\n    if (object.rate !== undefined && object.rate !== null) {\n      message.rate = object.rate;\n    } else {\n      message.rate = \"\";\n    }\n\n    if (object.maxRate !== undefined && object.maxRate !== null) {\n      message.maxRate = object.maxRate;\n    } else {\n      message.maxRate = \"\";\n    }\n\n    if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n      message.maxChangeRate = object.maxChangeRate;\n    } else {\n      message.maxChangeRate = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseCommission = {};\nexports.Commission = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.commissionRates !== undefined) {\n      exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.updateTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommission);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.updateTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommission);\n\n    if (object.commissionRates !== undefined && object.commissionRates !== null) {\n      message.commissionRates = exports.CommissionRates.fromJSON(object.commissionRates);\n    } else {\n      message.commissionRates = undefined;\n    }\n\n    if (object.updateTime !== undefined && object.updateTime !== null) {\n      message.updateTime = fromJsonTimestamp(object.updateTime);\n    } else {\n      message.updateTime = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? exports.CommissionRates.toJSON(message.commissionRates) : undefined);\n    message.updateTime !== undefined && (obj.updateTime = message.updateTime.toISOString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommission);\n\n    if (object.commissionRates !== undefined && object.commissionRates !== null) {\n      message.commissionRates = exports.CommissionRates.fromPartial(object.commissionRates);\n    } else {\n      message.commissionRates = undefined;\n    }\n\n    if (object.updateTime !== undefined && object.updateTime !== null) {\n      message.updateTime = object.updateTime;\n    } else {\n      message.updateTime = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseDescription = {\n  moniker: \"\",\n  identity: \"\",\n  website: \"\",\n  securityContact: \"\",\n  details: \"\"\n};\nexports.Description = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.moniker !== \"\") {\n      writer.uint32(10).string(message.moniker);\n    }\n\n    if (message.identity !== \"\") {\n      writer.uint32(18).string(message.identity);\n    }\n\n    if (message.website !== \"\") {\n      writer.uint32(26).string(message.website);\n    }\n\n    if (message.securityContact !== \"\") {\n      writer.uint32(34).string(message.securityContact);\n    }\n\n    if (message.details !== \"\") {\n      writer.uint32(42).string(message.details);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDescription);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.moniker = reader.string();\n          break;\n\n        case 2:\n          message.identity = reader.string();\n          break;\n\n        case 3:\n          message.website = reader.string();\n          break;\n\n        case 4:\n          message.securityContact = reader.string();\n          break;\n\n        case 5:\n          message.details = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDescription);\n\n    if (object.moniker !== undefined && object.moniker !== null) {\n      message.moniker = String(object.moniker);\n    } else {\n      message.moniker = \"\";\n    }\n\n    if (object.identity !== undefined && object.identity !== null) {\n      message.identity = String(object.identity);\n    } else {\n      message.identity = \"\";\n    }\n\n    if (object.website !== undefined && object.website !== null) {\n      message.website = String(object.website);\n    } else {\n      message.website = \"\";\n    }\n\n    if (object.securityContact !== undefined && object.securityContact !== null) {\n      message.securityContact = String(object.securityContact);\n    } else {\n      message.securityContact = \"\";\n    }\n\n    if (object.details !== undefined && object.details !== null) {\n      message.details = String(object.details);\n    } else {\n      message.details = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.moniker !== undefined && (obj.moniker = message.moniker);\n    message.identity !== undefined && (obj.identity = message.identity);\n    message.website !== undefined && (obj.website = message.website);\n    message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n    message.details !== undefined && (obj.details = message.details);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDescription);\n\n    if (object.moniker !== undefined && object.moniker !== null) {\n      message.moniker = object.moniker;\n    } else {\n      message.moniker = \"\";\n    }\n\n    if (object.identity !== undefined && object.identity !== null) {\n      message.identity = object.identity;\n    } else {\n      message.identity = \"\";\n    }\n\n    if (object.website !== undefined && object.website !== null) {\n      message.website = object.website;\n    } else {\n      message.website = \"\";\n    }\n\n    if (object.securityContact !== undefined && object.securityContact !== null) {\n      message.securityContact = object.securityContact;\n    } else {\n      message.securityContact = \"\";\n    }\n\n    if (object.details !== undefined && object.details !== null) {\n      message.details = object.details;\n    } else {\n      message.details = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseValidator = {\n  operatorAddress: \"\",\n  jailed: false,\n  status: 0,\n  tokens: \"\",\n  delegatorShares: \"\",\n  unbondingHeight: long_1.default.ZERO,\n  minSelfDelegation: \"\"\n};\nexports.Validator = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.operatorAddress !== \"\") {\n      writer.uint32(10).string(message.operatorAddress);\n    }\n\n    if (message.consensusPubkey !== undefined) {\n      any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.jailed === true) {\n      writer.uint32(24).bool(message.jailed);\n    }\n\n    if (message.status !== 0) {\n      writer.uint32(32).int32(message.status);\n    }\n\n    if (message.tokens !== \"\") {\n      writer.uint32(42).string(message.tokens);\n    }\n\n    if (message.delegatorShares !== \"\") {\n      writer.uint32(50).string(message.delegatorShares);\n    }\n\n    if (message.description !== undefined) {\n      exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n    }\n\n    if (!message.unbondingHeight.isZero()) {\n      writer.uint32(64).int64(message.unbondingHeight);\n    }\n\n    if (message.unbondingTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n    }\n\n    if (message.commission !== undefined) {\n      exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n    }\n\n    if (message.minSelfDelegation !== \"\") {\n      writer.uint32(90).string(message.minSelfDelegation);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValidator);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.operatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.jailed = reader.bool();\n          break;\n\n        case 4:\n          message.status = reader.int32();\n          break;\n\n        case 5:\n          message.tokens = reader.string();\n          break;\n\n        case 6:\n          message.delegatorShares = reader.string();\n          break;\n\n        case 7:\n          message.description = exports.Description.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.unbondingHeight = reader.int64();\n          break;\n\n        case 9:\n          message.unbondingTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 10:\n          message.commission = exports.Commission.decode(reader, reader.uint32());\n          break;\n\n        case 11:\n          message.minSelfDelegation = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValidator);\n\n    if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n      message.operatorAddress = String(object.operatorAddress);\n    } else {\n      message.operatorAddress = \"\";\n    }\n\n    if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n      message.consensusPubkey = any_1.Any.fromJSON(object.consensusPubkey);\n    } else {\n      message.consensusPubkey = undefined;\n    }\n\n    if (object.jailed !== undefined && object.jailed !== null) {\n      message.jailed = Boolean(object.jailed);\n    } else {\n      message.jailed = false;\n    }\n\n    if (object.status !== undefined && object.status !== null) {\n      message.status = bondStatusFromJSON(object.status);\n    } else {\n      message.status = 0;\n    }\n\n    if (object.tokens !== undefined && object.tokens !== null) {\n      message.tokens = String(object.tokens);\n    } else {\n      message.tokens = \"\";\n    }\n\n    if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n      message.delegatorShares = String(object.delegatorShares);\n    } else {\n      message.delegatorShares = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = exports.Description.fromJSON(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n      message.unbondingHeight = long_1.default.fromString(object.unbondingHeight);\n    } else {\n      message.unbondingHeight = long_1.default.ZERO;\n    }\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = exports.Commission.fromJSON(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = String(object.minSelfDelegation);\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n    message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : undefined);\n    message.jailed !== undefined && (obj.jailed = message.jailed);\n    message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n    message.tokens !== undefined && (obj.tokens = message.tokens);\n    message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n    message.description !== undefined && (obj.description = message.description ? exports.Description.toJSON(message.description) : undefined);\n    message.unbondingHeight !== undefined && (obj.unbondingHeight = (message.unbondingHeight || long_1.default.ZERO).toString());\n    message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime.toISOString());\n    message.commission !== undefined && (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : undefined);\n    message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseValidator);\n\n    if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n      message.operatorAddress = object.operatorAddress;\n    } else {\n      message.operatorAddress = \"\";\n    }\n\n    if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n      message.consensusPubkey = any_1.Any.fromPartial(object.consensusPubkey);\n    } else {\n      message.consensusPubkey = undefined;\n    }\n\n    if (object.jailed !== undefined && object.jailed !== null) {\n      message.jailed = object.jailed;\n    } else {\n      message.jailed = false;\n    }\n\n    if (object.status !== undefined && object.status !== null) {\n      message.status = object.status;\n    } else {\n      message.status = 0;\n    }\n\n    if (object.tokens !== undefined && object.tokens !== null) {\n      message.tokens = object.tokens;\n    } else {\n      message.tokens = \"\";\n    }\n\n    if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n      message.delegatorShares = object.delegatorShares;\n    } else {\n      message.delegatorShares = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = exports.Description.fromPartial(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n      message.unbondingHeight = object.unbondingHeight;\n    } else {\n      message.unbondingHeight = long_1.default.ZERO;\n    }\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = object.unbondingTime;\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = exports.Commission.fromPartial(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = object.minSelfDelegation;\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseValAddresses = {\n  addresses: \"\"\n};\nexports.ValAddresses = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.addresses) {\n      writer.uint32(10).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.addresses.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    if (object.addresses !== undefined && object.addresses !== null) {\n      for (const e of object.addresses) {\n        message.addresses.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.addresses) {\n      obj.addresses = message.addresses.map(e => e);\n    } else {\n      obj.addresses = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n\n    if (object.addresses !== undefined && object.addresses !== null) {\n      for (const e of object.addresses) {\n        message.addresses.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseDVPair = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.DVPair = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVPair);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVPair);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDVPair);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseDVPairs = {};\nexports.DVPairs = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.pairs) {\n      exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    if (object.pairs !== undefined && object.pairs !== null) {\n      for (const e of object.pairs) {\n        message.pairs.push(exports.DVPair.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.pairs) {\n      obj.pairs = message.pairs.map(e => e ? exports.DVPair.toJSON(e) : undefined);\n    } else {\n      obj.pairs = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n\n    if (object.pairs !== undefined && object.pairs !== null) {\n      for (const e of object.pairs) {\n        message.pairs.push(exports.DVPair.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseDVVTriplet = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.DVVTriplet = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVVTriplet);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVVTriplet);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = String(object.validatorSrcAddress);\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = String(object.validatorDstAddress);\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDVVTriplet);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = object.validatorSrcAddress;\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = object.validatorDstAddress;\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseDVVTriplets = {};\nexports.DVVTriplets = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.triplets) {\n      exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    if (object.triplets !== undefined && object.triplets !== null) {\n      for (const e of object.triplets) {\n        message.triplets.push(exports.DVVTriplet.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.triplets) {\n      obj.triplets = message.triplets.map(e => e ? exports.DVVTriplet.toJSON(e) : undefined);\n    } else {\n      obj.triplets = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n\n    if (object.triplets !== undefined && object.triplets !== null) {\n      for (const e of object.triplets) {\n        message.triplets.push(exports.DVVTriplet.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\",\n  shares: \"\"\n};\nexports.Delegation = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.shares !== \"\") {\n      writer.uint32(26).string(message.shares);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDelegation);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.shares = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDelegation);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.shares !== undefined && object.shares !== null) {\n      message.shares = String(object.shares);\n    } else {\n      message.shares = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.shares !== undefined && (obj.shares = message.shares);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDelegation);\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.shares !== undefined && object.shares !== null) {\n      message.shares = object.shares;\n    } else {\n      message.shares = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseUnbondingDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.UnbondingDelegation = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    for (const v of message.entries) {\n      exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.UnbondingDelegationEntry.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.UnbondingDelegationEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.UnbondingDelegationEntry.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseUnbondingDelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  balance: \"\"\n};\nexports.UnbondingDelegationEntry = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n\n        case 2:\n          message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n\n        case 4:\n          message.balance = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = long_1.default.fromString(object.creationHeight);\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = String(object.initialBalance);\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = String(object.balance);\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = object.creationHeight;\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = object.completionTime;\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = object.initialBalance;\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = object.balance;\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseRedelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  sharesDst: \"\"\n};\nexports.RedelegationEntry = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n\n    if (message.sharesDst !== \"\") {\n      writer.uint32(34).string(message.sharesDst);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationEntry);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n\n        case 2:\n          message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n\n        case 4:\n          message.sharesDst = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = long_1.default.fromString(object.creationHeight);\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = String(object.initialBalance);\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.sharesDst !== undefined && object.sharesDst !== null) {\n      message.sharesDst = String(object.sharesDst);\n    } else {\n      message.sharesDst = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseRedelegationEntry);\n\n    if (object.creationHeight !== undefined && object.creationHeight !== null) {\n      message.creationHeight = object.creationHeight;\n    } else {\n      message.creationHeight = long_1.default.ZERO;\n    }\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = object.completionTime;\n    } else {\n      message.completionTime = undefined;\n    }\n\n    if (object.initialBalance !== undefined && object.initialBalance !== null) {\n      message.initialBalance = object.initialBalance;\n    } else {\n      message.initialBalance = \"\";\n    }\n\n    if (object.sharesDst !== undefined && object.sharesDst !== null) {\n      message.sharesDst = object.sharesDst;\n    } else {\n      message.sharesDst = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseRedelegation = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.Redelegation = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n\n    for (const v of message.entries) {\n      exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n\n        case 4:\n          message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = String(object.validatorSrcAddress);\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = String(object.validatorDstAddress);\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.RedelegationEntry.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.RedelegationEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = object.validatorSrcAddress;\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = object.validatorDstAddress;\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.RedelegationEntry.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseParams = {\n  maxValidators: 0,\n  maxEntries: 0,\n  historicalEntries: 0,\n  bondDenom: \"\"\n};\nexports.Params = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.unbondingTime !== undefined) {\n      duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.maxValidators !== 0) {\n      writer.uint32(16).uint32(message.maxValidators);\n    }\n\n    if (message.maxEntries !== 0) {\n      writer.uint32(24).uint32(message.maxEntries);\n    }\n\n    if (message.historicalEntries !== 0) {\n      writer.uint32(32).uint32(message.historicalEntries);\n    }\n\n    if (message.bondDenom !== \"\") {\n      writer.uint32(42).string(message.bondDenom);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseParams);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.maxValidators = reader.uint32();\n          break;\n\n        case 3:\n          message.maxEntries = reader.uint32();\n          break;\n\n        case 4:\n          message.historicalEntries = reader.uint32();\n          break;\n\n        case 5:\n          message.bondDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseParams);\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = duration_1.Duration.fromJSON(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.maxValidators !== undefined && object.maxValidators !== null) {\n      message.maxValidators = Number(object.maxValidators);\n    } else {\n      message.maxValidators = 0;\n    }\n\n    if (object.maxEntries !== undefined && object.maxEntries !== null) {\n      message.maxEntries = Number(object.maxEntries);\n    } else {\n      message.maxEntries = 0;\n    }\n\n    if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n      message.historicalEntries = Number(object.historicalEntries);\n    } else {\n      message.historicalEntries = 0;\n    }\n\n    if (object.bondDenom !== undefined && object.bondDenom !== null) {\n      message.bondDenom = String(object.bondDenom);\n    } else {\n      message.bondDenom = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : undefined);\n    message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n    message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n    message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n    message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseParams);\n\n    if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n      message.unbondingTime = duration_1.Duration.fromPartial(object.unbondingTime);\n    } else {\n      message.unbondingTime = undefined;\n    }\n\n    if (object.maxValidators !== undefined && object.maxValidators !== null) {\n      message.maxValidators = object.maxValidators;\n    } else {\n      message.maxValidators = 0;\n    }\n\n    if (object.maxEntries !== undefined && object.maxEntries !== null) {\n      message.maxEntries = object.maxEntries;\n    } else {\n      message.maxEntries = 0;\n    }\n\n    if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n      message.historicalEntries = object.historicalEntries;\n    } else {\n      message.historicalEntries = 0;\n    }\n\n    if (object.bondDenom !== undefined && object.bondDenom !== null) {\n      message.bondDenom = object.bondDenom;\n    } else {\n      message.bondDenom = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseDelegationResponse = {};\nexports.DelegationResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.delegation !== undefined) {\n      exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.balance !== undefined) {\n      coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDelegationResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegation = exports.Delegation.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.balance = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDelegationResponse);\n\n    if (object.delegation !== undefined && object.delegation !== null) {\n      message.delegation = exports.Delegation.fromJSON(object.delegation);\n    } else {\n      message.delegation = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = coin_1.Coin.fromJSON(object.balance);\n    } else {\n      message.balance = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegation !== undefined && (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseDelegationResponse);\n\n    if (object.delegation !== undefined && object.delegation !== null) {\n      message.delegation = exports.Delegation.fromPartial(object.delegation);\n    } else {\n      message.delegation = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = coin_1.Coin.fromPartial(object.balance);\n    } else {\n      message.balance = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseRedelegationEntryResponse = {\n  balance: \"\"\n};\nexports.RedelegationEntryResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.redelegationEntry !== undefined) {\n      exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.balance = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n\n    if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n      message.redelegationEntry = exports.RedelegationEntry.fromJSON(object.redelegationEntry);\n    } else {\n      message.redelegationEntry = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = String(object.balance);\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.redelegationEntry !== undefined && (obj.redelegationEntry = message.redelegationEntry ? exports.RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n\n    if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n      message.redelegationEntry = exports.RedelegationEntry.fromPartial(object.redelegationEntry);\n    } else {\n      message.redelegationEntry = undefined;\n    }\n\n    if (object.balance !== undefined && object.balance !== null) {\n      message.balance = object.balance;\n    } else {\n      message.balance = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseRedelegationResponse = {};\nexports.RedelegationResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.redelegation !== undefined) {\n      exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.entries) {\n      exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegation = exports.Redelegation.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n\n    if (object.redelegation !== undefined && object.redelegation !== null) {\n      message.redelegation = exports.Redelegation.fromJSON(object.redelegation);\n    } else {\n      message.redelegation = undefined;\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.RedelegationEntryResponse.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.redelegation !== undefined && (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : undefined);\n\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.RedelegationEntryResponse.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n\n    if (object.redelegation !== undefined && object.redelegation !== null) {\n      message.redelegation = exports.Redelegation.fromPartial(object.redelegation);\n    } else {\n      message.redelegation = undefined;\n    }\n\n    if (object.entries !== undefined && object.entries !== null) {\n      for (const e of object.entries) {\n        message.entries.push(exports.RedelegationEntryResponse.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst basePool = {\n  notBondedTokens: \"\",\n  bondedTokens: \"\"\n};\nexports.Pool = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.notBondedTokens !== \"\") {\n      writer.uint32(10).string(message.notBondedTokens);\n    }\n\n    if (message.bondedTokens !== \"\") {\n      writer.uint32(18).string(message.bondedTokens);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePool);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.notBondedTokens = reader.string();\n          break;\n\n        case 2:\n          message.bondedTokens = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, basePool);\n\n    if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n      message.notBondedTokens = String(object.notBondedTokens);\n    } else {\n      message.notBondedTokens = \"\";\n    }\n\n    if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n      message.bondedTokens = String(object.bondedTokens);\n    } else {\n      message.bondedTokens = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n    message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, basePool);\n\n    if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n      message.notBondedTokens = object.notBondedTokens;\n    } else {\n      message.notBondedTokens = \"\";\n    }\n\n    if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n      message.bondedTokens = object.bondedTokens;\n    } else {\n      message.bondedTokens = \"\";\n    }\n\n    return message;\n  }\n\n};\n\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../../src/codec/cosmos/staking/v1beta1/staking.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst types_1 = require(\"../../../tendermint/types/types\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nvar BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\nfunction bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexports.bondStatusFromJSON = bondStatusFromJSON;\nfunction bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.bondStatusToJSON = bondStatusToJSON;\nconst baseHistoricalInfo = {};\nexports.HistoricalInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.header !== undefined) {\n            types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = types_1.Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(exports.Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(exports.Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? exports.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(exports.Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = { rate: \"\", maxRate: \"\", maxChangeRate: \"\" };\nexports.CommissionRates = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommissionRates);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommissionRates);\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCommissionRates);\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexports.Commission = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommission);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommission);\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = exports.CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? exports.CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime.toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCommission);\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = exports.CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = { moniker: \"\", identity: \"\", website: \"\", securityContact: \"\", details: \"\" };\nexports.Description = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDescription);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDescription);\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDescription);\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: long_1.default.ZERO,\n    minSelfDelegation: \"\",\n};\nexports.Validator = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (!message.unbondingHeight.isZero()) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidator);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = exports.Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = reader.int64();\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = exports.Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidator);\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = any_1.Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = exports.Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = long_1.default.fromString(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = long_1.default.ZERO;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = exports.Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description ? exports.Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = (message.unbondingHeight || long_1.default.ZERO).toString());\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime.toISOString());\n        message.commission !== undefined &&\n            (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValidator);\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = any_1.Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = exports.Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = long_1.default.ZERO;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = exports.Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexports.ValAddresses = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexports.DVPair = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVPair);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVPair);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDVPair);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexports.DVPairs = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.pairs) {\n            exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(exports.DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? exports.DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(exports.DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = { delegatorAddress: \"\", validatorSrcAddress: \"\", validatorDstAddress: \"\" };\nexports.DVVTriplet = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVVTriplet);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVVTriplet);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDVVTriplet);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexports.DVVTriplets = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.triplets) {\n            exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(exports.DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? exports.DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(exports.DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = { delegatorAddress: \"\", validatorAddress: \"\", shares: \"\" };\nexports.Delegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDelegation);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDelegation);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDelegation);\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = { delegatorAddress: \"\", validatorAddress: \"\" };\nexports.UnbondingDelegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = { creationHeight: long_1.default.ZERO, initialBalance: \"\", balance: \"\" };\nexports.UnbondingDelegationEntry = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.creationHeight.isZero()) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = reader.int64();\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = long_1.default.fromString(object.creationHeight);\n        }\n        else {\n            message.creationHeight = long_1.default.ZERO;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = long_1.default.ZERO;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = { creationHeight: long_1.default.ZERO, initialBalance: \"\", sharesDst: \"\" };\nexports.RedelegationEntry = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.creationHeight.isZero()) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationEntry);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = reader.int64();\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegationEntry);\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = long_1.default.fromString(object.creationHeight);\n        }\n        else {\n            message.creationHeight = long_1.default.ZERO;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime.toISOString());\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRedelegationEntry);\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = long_1.default.ZERO;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = { delegatorAddress: \"\", validatorSrcAddress: \"\", validatorDstAddress: \"\" };\nexports.Redelegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegation);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegation);\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRedelegation);\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: \"\" };\nexports.Params = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseParams);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseParams);\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = duration_1.Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseParams);\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = duration_1.Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexports.DelegationResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegation !== undefined) {\n            exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDelegationResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = exports.Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDelegationResponse);\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = exports.Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = coin_1.Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDelegationResponse);\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = exports.Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = coin_1.Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexports.RedelegationEntryResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = exports.RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? exports.RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = exports.RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexports.RedelegationResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.redelegation !== undefined) {\n            exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = exports.Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = exports.Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = exports.Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(exports.RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexports.Pool = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePool);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePool);\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePool);\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=staking.js.map"]},"metadata":{},"sourceType":"script"}