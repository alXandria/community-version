{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cw3CosmWasmClient = exports.Vote = void 0;\n\nconst signingcosmwasmclient_1 = require(\"./signingcosmwasmclient\");\n/**\n * @see https://github.com/CosmWasm/cosmwasm-plus/blob/v0.3.2/packages/cw3/src/msg.rs#L35\n */\n\n\nvar Vote;\n\n(function (Vote) {\n  Vote[\"Yes\"] = \"yes\";\n  Vote[\"No\"] = \"no\";\n  Vote[\"Abstain\"] = \"abstain\";\n  Vote[\"Veto\"] = \"veto\";\n})(Vote = exports.Vote || (exports.Vote = {}));\n\nclass Cw3CosmWasmClient extends signingcosmwasmclient_1.SigningCosmWasmClient {\n  constructor(apiUrl, signerAddress, signer, cw3ContractAddress, gasPrice, gasLimits, broadcastMode) {\n    super(apiUrl, signerAddress, signer, gasPrice, gasLimits, broadcastMode);\n    this.cw3ContractAddress = cw3ContractAddress;\n  }\n\n  getAccount(address) {\n    return super.getAccount(address || this.cw3ContractAddress);\n  }\n\n  getThreshold() {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      threshold: {}\n    });\n  }\n\n  getProposal(proposalId) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      proposal: {\n        proposal_id: proposalId\n      }\n    });\n  }\n\n  listProposals({\n    startAfter,\n    limit\n  } = {}) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      list_proposals: {\n        start_after: startAfter,\n        limit: limit\n      }\n    });\n  }\n\n  reverseProposals({\n    startBefore,\n    limit\n  } = {}) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      reverse_proposals: {\n        start_before: startBefore,\n        limit: limit\n      }\n    });\n  }\n\n  getVote(proposalId, voter) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      vote: {\n        proposal_id: proposalId,\n        voter: voter\n      }\n    });\n  }\n\n  listVotes(proposalId, {\n    startAfter,\n    limit\n  } = {}) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      list_votes: {\n        proposal_id: proposalId,\n        start_after: startAfter,\n        limit: limit\n      }\n    });\n  }\n\n  getVoter(address) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      voter: {\n        address: address\n      }\n    });\n  }\n\n  listVoters({\n    startAfter,\n    limit\n  } = {}) {\n    return this.queryContractSmart(this.cw3ContractAddress, {\n      list_voters: {\n        start_after: startAfter,\n        limit: limit\n      }\n    });\n  }\n\n  createMultisigProposal(title, description, msgs, earliest, latest, memo = \"\") {\n    const handleMsg = {\n      propose: {\n        title: title,\n        description: description,\n        msgs: msgs,\n        earliest: earliest,\n        latest: latest\n      }\n    };\n    return this.execute(this.cw3ContractAddress, handleMsg, memo);\n  }\n\n  voteMultisigProposal(proposalId, vote, memo = \"\") {\n    const handleMsg = {\n      vote: {\n        proposal_id: proposalId,\n        vote: vote\n      }\n    };\n    return this.execute(this.cw3ContractAddress, handleMsg, memo);\n  }\n\n  executeMultisigProposal(proposalId, memo = \"\") {\n    const handleMsg = {\n      execute: {\n        proposal_id: proposalId\n      }\n    };\n    return this.execute(this.cw3ContractAddress, handleMsg, memo);\n  }\n\n  closeMultisigProposal(proposalId, memo = \"\") {\n    const handleMsg = {\n      close: {\n        proposal_id: proposalId\n      }\n    };\n    return this.execute(this.cw3ContractAddress, handleMsg, memo);\n  }\n\n}\n\nexports.Cw3CosmWasmClient = Cw3CosmWasmClient;","map":{"version":3,"sources":["../src/cw3cosmwasmclient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cw3CosmWasmClient = exports.Vote = void 0;\nconst signingcosmwasmclient_1 = require(\"./signingcosmwasmclient\");\n/**\n * @see https://github.com/CosmWasm/cosmwasm-plus/blob/v0.3.2/packages/cw3/src/msg.rs#L35\n */\nvar Vote;\n(function (Vote) {\n    Vote[\"Yes\"] = \"yes\";\n    Vote[\"No\"] = \"no\";\n    Vote[\"Abstain\"] = \"abstain\";\n    Vote[\"Veto\"] = \"veto\";\n})(Vote = exports.Vote || (exports.Vote = {}));\nclass Cw3CosmWasmClient extends signingcosmwasmclient_1.SigningCosmWasmClient {\n    constructor(apiUrl, signerAddress, signer, cw3ContractAddress, gasPrice, gasLimits, broadcastMode) {\n        super(apiUrl, signerAddress, signer, gasPrice, gasLimits, broadcastMode);\n        this.cw3ContractAddress = cw3ContractAddress;\n    }\n    getAccount(address) {\n        return super.getAccount(address || this.cw3ContractAddress);\n    }\n    getThreshold() {\n        return this.queryContractSmart(this.cw3ContractAddress, { threshold: {} });\n    }\n    getProposal(proposalId) {\n        return this.queryContractSmart(this.cw3ContractAddress, { proposal: { proposal_id: proposalId } });\n    }\n    listProposals({ startAfter, limit, } = {}) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            list_proposals: {\n                start_after: startAfter,\n                limit: limit,\n            },\n        });\n    }\n    reverseProposals({ startBefore, limit, } = {}) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            reverse_proposals: {\n                start_before: startBefore,\n                limit: limit,\n            },\n        });\n    }\n    getVote(proposalId, voter) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            vote: {\n                proposal_id: proposalId,\n                voter: voter,\n            },\n        });\n    }\n    listVotes(proposalId, { startAfter, limit } = {}) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            list_votes: {\n                proposal_id: proposalId,\n                start_after: startAfter,\n                limit: limit,\n            },\n        });\n    }\n    getVoter(address) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            voter: {\n                address: address,\n            },\n        });\n    }\n    listVoters({ startAfter, limit } = {}) {\n        return this.queryContractSmart(this.cw3ContractAddress, {\n            list_voters: {\n                start_after: startAfter,\n                limit: limit,\n            },\n        });\n    }\n    createMultisigProposal(title, description, msgs, earliest, latest, memo = \"\") {\n        const handleMsg = {\n            propose: {\n                title: title,\n                description: description,\n                msgs: msgs,\n                earliest: earliest,\n                latest: latest,\n            },\n        };\n        return this.execute(this.cw3ContractAddress, handleMsg, memo);\n    }\n    voteMultisigProposal(proposalId, vote, memo = \"\") {\n        const handleMsg = {\n            vote: {\n                proposal_id: proposalId,\n                vote: vote,\n            },\n        };\n        return this.execute(this.cw3ContractAddress, handleMsg, memo);\n    }\n    executeMultisigProposal(proposalId, memo = \"\") {\n        const handleMsg = { execute: { proposal_id: proposalId } };\n        return this.execute(this.cw3ContractAddress, handleMsg, memo);\n    }\n    closeMultisigProposal(proposalId, memo = \"\") {\n        const handleMsg = { close: { proposal_id: proposalId } };\n        return this.execute(this.cw3ContractAddress, handleMsg, memo);\n    }\n}\nexports.Cw3CosmWasmClient = Cw3CosmWasmClient;\n//# sourceMappingURL=cw3cosmwasmclient.js.map"]},"metadata":{},"sourceType":"script"}