{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\n\nfunction isEd25519Pubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\n\nexports.isEd25519Pubkey = isEd25519Pubkey;\n\nfunction isSecp256k1Pubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\n\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n  secp256k1: \"tendermint/PubKeySecp256k1\",\n\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n  ed25519: \"tendermint/PubKeyEd25519\",\n\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n  sr25519: \"tendermint/PubKeySr25519\",\n  multisigThreshold: \"tendermint/PubKeyMultisigThreshold\"\n};\n\nfunction isSinglePubkey(pubkey) {\n  const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n  return singPubkeyTypes.includes(pubkey.type);\n}\n\nexports.isSinglePubkey = isSinglePubkey;\n\nfunction isMultisigThresholdPubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\n\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;","map":{"version":3,"sources":["../src/pubkeys.ts"],"names":[],"mappings":";;;;;;;AAaA,SAAgB,eAAhB,CAAgC,MAAhC,EAA8C;AAC5C,SAAQ,MAAwB,CAAC,IAAzB,KAAkC,0BAA1C;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA;;AASA,SAAgB,iBAAhB,CAAkC,MAAlC,EAAgD;AAC9C,SAAQ,MAA0B,CAAC,IAA3B,KAAoC,4BAA5C;AACD;;AAFD,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAIa,OAAA,CAAA,UAAA,GAAa;AACxB;AACA,EAAA,SAAS,EAAE,4BAFa;;AAGxB;AACA,EAAA,OAAO,EAAE,0BAJe;;AAKxB;AACA,EAAA,OAAO,EAAE,0BANe;AAOxB,EAAA,iBAAiB,EAAE;AAPK,CAAb;;AA4Bb,SAAgB,cAAhB,CAA+B,MAA/B,EAA6C;AAC3C,QAAM,eAAe,GAAa,CAAC,OAAA,CAAA,UAAA,CAAW,OAAZ,EAAqB,OAAA,CAAA,UAAA,CAAW,SAAhC,EAA2C,OAAA,CAAA,UAAA,CAAW,OAAtD,CAAlC;AACA,SAAO,eAAe,CAAC,QAAhB,CAAyB,MAAM,CAAC,IAAhC,CAAP;AACD;;AAHD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAcA,SAAgB,yBAAhB,CAA0C,MAA1C,EAAwD;AACtD,SAAQ,MAAkC,CAAC,IAAnC,KAA4C,oCAApD;AACD;;AAFD,OAAA,CAAA,yBAAA,GAAA,yBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n    secp256k1: \"tendermint/PubKeySecp256k1\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n    ed25519: \"tendermint/PubKeyEd25519\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n    sr25519: \"tendermint/PubKeySr25519\",\n    multisigThreshold: \"tendermint/PubKeyMultisigThreshold\",\n};\nfunction isSinglePubkey(pubkey) {\n    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n    return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;\n//# sourceMappingURL=pubkeys.js.map"]},"metadata":{},"sourceType":"script"}