{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bech32 = void 0;\n\nconst bech32 = __importStar(require(\"bech32\"));\n\nclass Bech32 {\n  static encode(prefix, data, limit) {\n    const address = bech32.encode(prefix, bech32.toWords(data), limit);\n    return address;\n  }\n\n  static decode(address, limit = Infinity) {\n    const decodedAddress = bech32.decode(address, limit);\n    return {\n      prefix: decodedAddress.prefix,\n      data: new Uint8Array(bech32.fromWords(decodedAddress.words))\n    };\n  }\n\n}\n\nexports.Bech32 = Bech32;","map":{"version":3,"sources":["../src/bech32.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,MAAa,MAAb,CAAmB;AACV,SAAO,MAAP,CAAc,MAAd,EAA8B,IAA9B,EAAgD,KAAhD,EAA8D;AACnE,UAAM,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,MAAM,CAAC,OAAP,CAAe,IAAf,CAAtB,EAA4C,KAA5C,CAAhB;AACA,WAAO,OAAP;AACD;;AAEM,SAAO,MAAP,CACL,OADK,EAEL,KAAK,GAAG,QAFH,EAEW;AAEhB,UAAM,cAAc,GAAG,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB,KAAvB,CAAvB;AACA,WAAO;AACL,MAAA,MAAM,EAAE,cAAc,CAAC,MADlB;AAEL,MAAA,IAAI,EAAE,IAAI,UAAJ,CAAe,MAAM,CAAC,SAAP,CAAiB,cAAc,CAAC,KAAhC,CAAf;AAFD,KAAP;AAID;;AAfgB;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bech32 = void 0;\nconst bech32 = __importStar(require(\"bech32\"));\nclass Bech32 {\n    static encode(prefix, data, limit) {\n        const address = bech32.encode(prefix, bech32.toWords(data), limit);\n        return address;\n    }\n    static decode(address, limit = Infinity) {\n        const decodedAddress = bech32.decode(address, limit);\n        return {\n            prefix: decodedAddress.prefix,\n            data: new Uint8Array(bech32.fromWords(decodedAddress.words)),\n        };\n    }\n}\nexports.Bech32 = Bech32;\n//# sourceMappingURL=bech32.js.map"]},"metadata":{},"sourceType":"script"}