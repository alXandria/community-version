{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst math_1 = require(\"@cosmjs/math\");\n\nfunction sortedObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(sortedObject);\n  }\n\n  const sortedKeys = Object.keys(obj).sort();\n  const result = {}; // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n\n  sortedKeys.forEach(key => {\n    result[key] = sortedObject(obj[key]);\n  });\n  return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nfunction sortedJsonStringify(obj) {\n  return JSON.stringify(sortedObject(obj));\n}\n\nexports.sortedJsonStringify = sortedJsonStringify;\n\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {\n  return {\n    chain_id: chainId,\n    account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n    sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n    fee: fee,\n    msgs: msgs,\n    memo: memo || \"\"\n  };\n}\n\nexports.makeSignDoc = makeSignDoc;\n\nfunction serializeSignDoc(signDoc) {\n  return encoding_1.toUtf8(sortedJsonStringify(signDoc));\n}\n\nexports.serializeSignDoc = serializeSignDoc;","map":{"version":3,"sources":["../src/signdoc.ts"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AA4BA,SAAS,YAAT,CAAsB,GAAtB,EAA8B;AAC5B,MAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,GAAG,KAAK,IAAvC,EAA6C;AAC3C,WAAO,GAAP;AACD;;AACD,MAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,WAAO,GAAG,CAAC,GAAJ,CAAQ,YAAR,CAAP;AACD;;AACD,QAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,IAAjB,EAAnB;AACA,QAAM,MAAM,GAAwB,EAApC,CAR4B,CAS5B;;AACA,EAAA,UAAU,CAAC,OAAX,CAAoB,GAAD,IAAQ;AACzB,IAAA,MAAM,CAAC,GAAD,CAAN,GAAc,YAAY,CAAC,GAAG,CAAC,GAAD,CAAJ,CAA1B;AACD,GAFD;AAGA,SAAO,MAAP;AACD;AAED;AACA;;;AACA,SAAgB,mBAAhB,CAAoC,GAApC,EAA4C;AAC1C,SAAO,IAAI,CAAC,SAAL,CAAe,YAAY,CAAC,GAAD,CAA3B,CAAP;AACD;;AAFD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAIA,SAAgB,WAAhB,CACE,IADF,EAEE,GAFF,EAGE,OAHF,EAIE,IAJF,EAKE,aALF,EAME,QANF,EAM2B;AAEzB,SAAO;AACL,IAAA,QAAQ,EAAE,OADL;AAEL,IAAA,cAAc,EAAE,MAAA,CAAA,MAAA,CAAO,UAAP,CAAkB,aAAa,CAAC,QAAd,EAAlB,EAA4C,QAA5C,EAFX;AAGL,IAAA,QAAQ,EAAE,MAAA,CAAA,MAAA,CAAO,UAAP,CAAkB,QAAQ,CAAC,QAAT,EAAlB,EAAuC,QAAvC,EAHL;AAIL,IAAA,GAAG,EAAE,GAJA;AAKL,IAAA,IAAI,EAAE,IALD;AAML,IAAA,IAAI,EAAE,IAAI,IAAI;AANT,GAAP;AAQD;;AAhBD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAkBA,SAAgB,gBAAhB,CAAiC,OAAjC,EAAoD;AAClD,SAAO,UAAA,CAAA,MAAA,CAAO,mBAAmB,CAAC,OAAD,CAA1B,CAAP;AACD;;AAFD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst math_1 = require(\"@cosmjs/math\");\nfunction sortedObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(sortedObject);\n    }\n    const sortedKeys = Object.keys(obj).sort();\n    const result = {};\n    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n    sortedKeys.forEach((key) => {\n        result[key] = sortedObject(obj[key]);\n    });\n    return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n    return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {\n    return {\n        chain_id: chainId,\n        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n        fee: fee,\n        msgs: msgs,\n        memo: memo || \"\",\n    };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction serializeSignDoc(signDoc) {\n    return encoding_1.toUtf8(sortedJsonStringify(signDoc));\n}\nexports.serializeSignDoc = serializeSignDoc;\n//# sourceMappingURL=signdoc.js.map"]},"metadata":{},"sourceType":"script"}