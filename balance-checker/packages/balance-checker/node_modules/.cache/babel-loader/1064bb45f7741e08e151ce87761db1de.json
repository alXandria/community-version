{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJsonRpcRequest = void 0;\nconst numbersWithoutZero = \"123456789\";\n/** generates a random numeric character  */\n\nfunction randomNumericChar() {\n  return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\n\n\nfunction randomId() {\n  return parseInt(Array.from({\n    length: 12\n  }).map(() => randomNumericChar()).join(\"\"), 10);\n}\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction createJsonRpcRequest(method, params) {\n  const paramsCopy = params ? Object.assign({}, params) : {};\n  return {\n    jsonrpc: \"2.0\",\n    id: randomId(),\n    method: method,\n    params: paramsCopy\n  };\n}\n\nexports.createJsonRpcRequest = createJsonRpcRequest;","map":{"version":3,"sources":["../src/jsonrpc.ts"],"names":[],"mappings":";;;;;;AAEA,MAAM,kBAAkB,GAAG,WAA3B;AAEA;;AACA,SAAS,iBAAT,GAA0B;AACxB,SAAO,kBAAkB,CAAC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,kBAAkB,CAAC,MAA9C,CAAD,CAAzB;AACD;AAED;;;;;AAGA,SAAS,QAAT,GAAiB;AACf,SAAO,QAAQ,CACb,KAAK,CAAC,IAAN,CAAW;AAAE,IAAA,MAAM,EAAE;AAAV,GAAX,EACG,GADH,CACO,MAAM,iBAAiB,EAD9B,EAEG,IAFH,CAEQ,EAFR,CADa,EAIb,EAJa,CAAf;AAMD;AAED;AACA;;;AACA,SAAgB,oBAAhB,CAAqC,MAArC,EAAqD,MAArD,EAAgE;AAC9D,QAAM,UAAU,GAAG,MAAM,GAAE,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,MAAN,CAAF,GAAmB,EAA5C;AACA,SAAO;AACL,IAAA,OAAO,EAAE,KADJ;AAEL,IAAA,EAAE,EAAE,QAAQ,EAFP;AAGL,IAAA,MAAM,EAAE,MAHH;AAIL,IAAA,MAAM,EAAE;AAJH,GAAP;AAMD;;AARD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createJsonRpcRequest = void 0;\nconst numbersWithoutZero = \"123456789\";\n/** generates a random numeric character  */\nfunction randomNumericChar() {\n    return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\nfunction randomId() {\n    return parseInt(Array.from({ length: 12 })\n        .map(() => randomNumericChar())\n        .join(\"\"), 10);\n}\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createJsonRpcRequest(method, params) {\n    const paramsCopy = params ? Object.assign({}, params) : {};\n    return {\n        jsonrpc: \"2.0\",\n        id: randomId(),\n        method: method,\n        params: paramsCopy,\n    };\n}\nexports.createJsonRpcRequest = createJsonRpcRequest;\n//# sourceMappingURL=jsonrpc.js.map"]},"metadata":{},"sourceType":"script"}