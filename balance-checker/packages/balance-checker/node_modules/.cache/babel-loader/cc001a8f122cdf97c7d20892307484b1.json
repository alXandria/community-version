{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeJsonRpcId = void 0; // Start with 10001 to avoid possible collisions with all hand-selected values like e.g. 1,2,3,42,100\n\nlet counter = 10000;\n/**\n * Creates a new ID to be used for creating a JSON-RPC request.\n *\n * Multiple calls of this produce unique values.\n *\n * The output may be any value compatible to JSON-RPC request IDs with an undefined output format and generation logic.\n */\n\nfunction makeJsonRpcId() {\n  return counter += 1;\n}\n\nexports.makeJsonRpcId = makeJsonRpcId;","map":{"version":3,"sources":["../src/id.ts"],"names":[],"mappings":";;;;;gCAAA;;AACA,IAAI,OAAO,GAAG,KAAd;AAEA;;;;;;;;AAOA,SAAgB,aAAhB,GAA6B;AAC3B,SAAQ,OAAO,IAAI,CAAnB;AACD;;AAFD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeJsonRpcId = void 0;\n// Start with 10001 to avoid possible collisions with all hand-selected values like e.g. 1,2,3,42,100\nlet counter = 10000;\n/**\n * Creates a new ID to be used for creating a JSON-RPC request.\n *\n * Multiple calls of this produce unique values.\n *\n * The output may be any value compatible to JSON-RPC request IDs with an undefined output format and generation logic.\n */\nfunction makeJsonRpcId() {\n    return (counter += 1);\n}\nexports.makeJsonRpcId = makeJsonRpcId;\n//# sourceMappingURL=id.js.map"]},"metadata":{},"sourceType":"script"}