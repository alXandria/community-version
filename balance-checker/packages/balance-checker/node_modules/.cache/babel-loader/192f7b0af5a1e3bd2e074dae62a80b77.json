{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = symbolObservablePonyfill;\n\nfunction symbolObservablePonyfill(root) {\n  var result;\n  var _Symbol = root.Symbol;\n\n  if (typeof _Symbol === 'function') {\n    if (_Symbol.observable) {\n      result = _Symbol.observable;\n    } else {\n      // This just needs to be something that won't trample other user's Symbol.for use\n      // It also will guide people to the source of their issues, if this is problematic.\n      // META: It's a resource locator!\n      result = _Symbol['for']('https://github.com/benlesh/symbol-observable');\n\n      try {\n        _Symbol.observable = result;\n      } catch (err) {// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n        // if it is frozen assigning to it will throw. In this case, we don't care, because\n        // they will need to use the returned value from the ponyfill.\n      }\n    }\n  } else {\n    result = '@@observable';\n  }\n\n  return result;\n}\n\n;","map":{"version":3,"sources":["/Users/makand/cosmwasm/dApps/node_modules/symbol-observable/lib/ponyfill.js"],"names":["Object","defineProperty","exports","value","symbolObservablePonyfill","root","result","_Symbol","Symbol","observable","err"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC5CC,EAAAA,KAAK,EAAE;AADqC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,wBAArB;;AACA,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;AACvC,MAAIC,MAAJ;AACA,MAAIC,OAAO,GAAGF,IAAI,CAACG,MAAnB;;AAEA,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AAClC,QAAIA,OAAO,CAACE,UAAZ,EAAwB;AACvBH,MAAAA,MAAM,GAAGC,OAAO,CAACE,UAAjB;AACA,KAFD,MAEO;AAEN;AACA;AACA;AACAH,MAAAA,MAAM,GAAGC,OAAO,CAAC,KAAD,CAAP,CAAe,8CAAf,CAAT;;AACA,UAAI;AACHA,QAAAA,OAAO,CAACE,UAAR,GAAqBH,MAArB;AACA,OAFD,CAEE,OAAOI,GAAP,EAAY,CACb;AACA;AACA;AACA;AACD;AACD,GAjBD,MAiBO;AACNJ,IAAAA,MAAM,GAAG,cAAT;AACA;;AAED,SAAOA,MAAP;AACA;;AAAA","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\n\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t// META: It's a resource locator!\n\t\t\tresult = _Symbol['for']('https://github.com/benlesh/symbol-observable');\n\t\t\ttry {\n\t\t\t\t_Symbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};"]},"metadata":{},"sourceType":"script"}