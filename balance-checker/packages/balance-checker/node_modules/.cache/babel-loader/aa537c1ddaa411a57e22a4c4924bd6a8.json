{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nconst duration_1 = require(\"../../../../google/protobuf/duration\");\n\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\n\nconst commitment_1 = require(\"../../../../ibc/core/commitment/v1/commitment\");\n\nconst types_1 = require(\"../../../../tendermint/types/types\");\n\nconst validator_1 = require(\"../../../../tendermint/types/validator\");\n\nconst timestamp_1 = require(\"../../../../google/protobuf/timestamp\");\n\nconst proofs_1 = require(\"../../../../confio/proofs\");\n\nexports.protobufPackage = \"ibc.lightclients.tendermint.v1\";\nconst baseClientState = {\n  chainId: \"\",\n  upgradePath: \"\",\n  allowUpdateAfterExpiry: false,\n  allowUpdateAfterMisbehaviour: false\n};\nexports.ClientState = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.chainId !== \"\") {\n      writer.uint32(10).string(message.chainId);\n    }\n\n    if (message.trustLevel !== undefined) {\n      exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.trustingPeriod !== undefined) {\n      duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.unbondingPeriod !== undefined) {\n      duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.maxClockDrift !== undefined) {\n      duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.frozenHeight !== undefined) {\n      client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();\n    }\n\n    if (message.latestHeight !== undefined) {\n      client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();\n    }\n\n    for (const v of message.proofSpecs) {\n      proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();\n    }\n\n    for (const v of message.upgradePath) {\n      writer.uint32(74).string(v);\n    }\n\n    if (message.allowUpdateAfterExpiry === true) {\n      writer.uint32(80).bool(message.allowUpdateAfterExpiry);\n    }\n\n    if (message.allowUpdateAfterMisbehaviour === true) {\n      writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseClientState);\n    message.proofSpecs = [];\n    message.upgradePath = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.chainId = reader.string();\n          break;\n\n        case 2:\n          message.trustLevel = exports.Fraction.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.frozenHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.latestHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));\n          break;\n\n        case 9:\n          message.upgradePath.push(reader.string());\n          break;\n\n        case 10:\n          message.allowUpdateAfterExpiry = reader.bool();\n          break;\n\n        case 11:\n          message.allowUpdateAfterMisbehaviour = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseClientState);\n    message.proofSpecs = [];\n    message.upgradePath = [];\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = String(object.chainId);\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.trustLevel !== undefined && object.trustLevel !== null) {\n      message.trustLevel = exports.Fraction.fromJSON(object.trustLevel);\n    } else {\n      message.trustLevel = undefined;\n    }\n\n    if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n      message.trustingPeriod = duration_1.Duration.fromJSON(object.trustingPeriod);\n    } else {\n      message.trustingPeriod = undefined;\n    }\n\n    if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n      message.unbondingPeriod = duration_1.Duration.fromJSON(object.unbondingPeriod);\n    } else {\n      message.unbondingPeriod = undefined;\n    }\n\n    if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n      message.maxClockDrift = duration_1.Duration.fromJSON(object.maxClockDrift);\n    } else {\n      message.maxClockDrift = undefined;\n    }\n\n    if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n      message.frozenHeight = client_1.Height.fromJSON(object.frozenHeight);\n    } else {\n      message.frozenHeight = undefined;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = client_1.Height.fromJSON(object.latestHeight);\n    } else {\n      message.latestHeight = undefined;\n    }\n\n    if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n      for (const e of object.proofSpecs) {\n        message.proofSpecs.push(proofs_1.ProofSpec.fromJSON(e));\n      }\n    }\n\n    if (object.upgradePath !== undefined && object.upgradePath !== null) {\n      for (const e of object.upgradePath) {\n        message.upgradePath.push(String(e));\n      }\n    }\n\n    if (object.allowUpdateAfterExpiry !== undefined && object.allowUpdateAfterExpiry !== null) {\n      message.allowUpdateAfterExpiry = Boolean(object.allowUpdateAfterExpiry);\n    } else {\n      message.allowUpdateAfterExpiry = false;\n    }\n\n    if (object.allowUpdateAfterMisbehaviour !== undefined && object.allowUpdateAfterMisbehaviour !== null) {\n      message.allowUpdateAfterMisbehaviour = Boolean(object.allowUpdateAfterMisbehaviour);\n    } else {\n      message.allowUpdateAfterMisbehaviour = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.trustLevel !== undefined && (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : undefined);\n    message.trustingPeriod !== undefined && (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : undefined);\n    message.unbondingPeriod !== undefined && (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : undefined);\n    message.maxClockDrift !== undefined && (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : undefined);\n    message.frozenHeight !== undefined && (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : undefined);\n    message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : undefined);\n\n    if (message.proofSpecs) {\n      obj.proofSpecs = message.proofSpecs.map(e => e ? proofs_1.ProofSpec.toJSON(e) : undefined);\n    } else {\n      obj.proofSpecs = [];\n    }\n\n    if (message.upgradePath) {\n      obj.upgradePath = message.upgradePath.map(e => e);\n    } else {\n      obj.upgradePath = [];\n    }\n\n    message.allowUpdateAfterExpiry !== undefined && (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);\n    message.allowUpdateAfterMisbehaviour !== undefined && (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseClientState);\n    message.proofSpecs = [];\n    message.upgradePath = [];\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = object.chainId;\n    } else {\n      message.chainId = \"\";\n    }\n\n    if (object.trustLevel !== undefined && object.trustLevel !== null) {\n      message.trustLevel = exports.Fraction.fromPartial(object.trustLevel);\n    } else {\n      message.trustLevel = undefined;\n    }\n\n    if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n      message.trustingPeriod = duration_1.Duration.fromPartial(object.trustingPeriod);\n    } else {\n      message.trustingPeriod = undefined;\n    }\n\n    if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n      message.unbondingPeriod = duration_1.Duration.fromPartial(object.unbondingPeriod);\n    } else {\n      message.unbondingPeriod = undefined;\n    }\n\n    if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n      message.maxClockDrift = duration_1.Duration.fromPartial(object.maxClockDrift);\n    } else {\n      message.maxClockDrift = undefined;\n    }\n\n    if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n      message.frozenHeight = client_1.Height.fromPartial(object.frozenHeight);\n    } else {\n      message.frozenHeight = undefined;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = client_1.Height.fromPartial(object.latestHeight);\n    } else {\n      message.latestHeight = undefined;\n    }\n\n    if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n      for (const e of object.proofSpecs) {\n        message.proofSpecs.push(proofs_1.ProofSpec.fromPartial(e));\n      }\n    }\n\n    if (object.upgradePath !== undefined && object.upgradePath !== null) {\n      for (const e of object.upgradePath) {\n        message.upgradePath.push(e);\n      }\n    }\n\n    if (object.allowUpdateAfterExpiry !== undefined && object.allowUpdateAfterExpiry !== null) {\n      message.allowUpdateAfterExpiry = object.allowUpdateAfterExpiry;\n    } else {\n      message.allowUpdateAfterExpiry = false;\n    }\n\n    if (object.allowUpdateAfterMisbehaviour !== undefined && object.allowUpdateAfterMisbehaviour !== null) {\n      message.allowUpdateAfterMisbehaviour = object.allowUpdateAfterMisbehaviour;\n    } else {\n      message.allowUpdateAfterMisbehaviour = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseConsensusState = {};\nexports.ConsensusState = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.root !== undefined) {\n      commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(26).bytes(message.nextValidatorsHash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseConsensusState);\n    message.nextValidatorsHash = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseConsensusState);\n    message.nextValidatorsHash = new Uint8Array();\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = fromJsonTimestamp(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.root !== undefined && object.root !== null) {\n      message.root = commitment_1.MerkleRoot.fromJSON(object.root);\n    } else {\n      message.root = undefined;\n    }\n\n    if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n      message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n    message.root !== undefined && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : undefined);\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseConsensusState);\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = object.timestamp;\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.root !== undefined && object.root !== null) {\n      message.root = commitment_1.MerkleRoot.fromPartial(object.root);\n    } else {\n      message.root = undefined;\n    }\n\n    if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n      message.nextValidatorsHash = object.nextValidatorsHash;\n    } else {\n      message.nextValidatorsHash = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseMisbehaviour = {\n  clientId: \"\"\n};\nexports.Misbehaviour = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    if (message.header1 !== undefined) {\n      exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.header2 !== undefined) {\n      exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMisbehaviour);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.header1 = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.header2 = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMisbehaviour);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.header1 !== undefined && object.header1 !== null) {\n      message.header1 = exports.Header.fromJSON(object.header1);\n    } else {\n      message.header1 = undefined;\n    }\n\n    if (object.header2 !== undefined && object.header2 !== null) {\n      message.header2 = exports.Header.fromJSON(object.header2);\n    } else {\n      message.header2 = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.header1 !== undefined && (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : undefined);\n    message.header2 !== undefined && (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMisbehaviour);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.header1 !== undefined && object.header1 !== null) {\n      message.header1 = exports.Header.fromPartial(object.header1);\n    } else {\n      message.header1 = undefined;\n    }\n\n    if (object.header2 !== undefined && object.header2 !== null) {\n      message.header2 = exports.Header.fromPartial(object.header2);\n    } else {\n      message.header2 = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseHeader = {};\nexports.Header = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.signedHeader !== undefined) {\n      types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.validatorSet !== undefined) {\n      validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.trustedHeight !== undefined) {\n      client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.trustedValidators !== undefined) {\n      validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseHeader);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.trustedHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseHeader);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = types_1.SignedHeader.fromJSON(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n      message.trustedHeight = client_1.Height.fromJSON(object.trustedHeight);\n    } else {\n      message.trustedHeight = undefined;\n    }\n\n    if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n      message.trustedValidators = validator_1.ValidatorSet.fromJSON(object.trustedValidators);\n    } else {\n      message.trustedValidators = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : undefined);\n    message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n    message.trustedHeight !== undefined && (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : undefined);\n    message.trustedValidators !== undefined && (obj.trustedValidators = message.trustedValidators ? validator_1.ValidatorSet.toJSON(message.trustedValidators) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseHeader);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = types_1.SignedHeader.fromPartial(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n      message.trustedHeight = client_1.Height.fromPartial(object.trustedHeight);\n    } else {\n      message.trustedHeight = undefined;\n    }\n\n    if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n      message.trustedValidators = validator_1.ValidatorSet.fromPartial(object.trustedValidators);\n    } else {\n      message.trustedValidators = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseFraction = {\n  numerator: long_1.default.UZERO,\n  denominator: long_1.default.UZERO\n};\nexports.Fraction = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (!message.numerator.isZero()) {\n      writer.uint32(8).uint64(message.numerator);\n    }\n\n    if (!message.denominator.isZero()) {\n      writer.uint32(16).uint64(message.denominator);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseFraction);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.numerator = reader.uint64();\n          break;\n\n        case 2:\n          message.denominator = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseFraction);\n\n    if (object.numerator !== undefined && object.numerator !== null) {\n      message.numerator = long_1.default.fromString(object.numerator);\n    } else {\n      message.numerator = long_1.default.UZERO;\n    }\n\n    if (object.denominator !== undefined && object.denominator !== null) {\n      message.denominator = long_1.default.fromString(object.denominator);\n    } else {\n      message.denominator = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.numerator !== undefined && (obj.numerator = (message.numerator || long_1.default.UZERO).toString());\n    message.denominator !== undefined && (obj.denominator = (message.denominator || long_1.default.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseFraction);\n\n    if (object.numerator !== undefined && object.numerator !== null) {\n      message.numerator = object.numerator;\n    } else {\n      message.numerator = long_1.default.UZERO;\n    }\n\n    if (object.denominator !== undefined && object.denominator !== null) {\n      message.denominator = object.denominator;\n    } else {\n      message.denominator = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../../../src/codec/ibc/lightclients/tendermint/v1/tendermint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fraction = exports.Header = exports.Misbehaviour = exports.ConsensusState = exports.ClientState = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst duration_1 = require(\"../../../../google/protobuf/duration\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nconst commitment_1 = require(\"../../../../ibc/core/commitment/v1/commitment\");\nconst types_1 = require(\"../../../../tendermint/types/types\");\nconst validator_1 = require(\"../../../../tendermint/types/validator\");\nconst timestamp_1 = require(\"../../../../google/protobuf/timestamp\");\nconst proofs_1 = require(\"../../../../confio/proofs\");\nexports.protobufPackage = \"ibc.lightclients.tendermint.v1\";\nconst baseClientState = {\n    chainId: \"\",\n    upgradePath: \"\",\n    allowUpdateAfterExpiry: false,\n    allowUpdateAfterMisbehaviour: false,\n};\nexports.ClientState = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.chainId !== \"\") {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.trustLevel !== undefined) {\n            exports.Fraction.encode(message.trustLevel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.trustingPeriod !== undefined) {\n            duration_1.Duration.encode(message.trustingPeriod, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.unbondingPeriod !== undefined) {\n            duration_1.Duration.encode(message.unbondingPeriod, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.maxClockDrift !== undefined) {\n            duration_1.Duration.encode(message.maxClockDrift, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.frozenHeight !== undefined) {\n            client_1.Height.encode(message.frozenHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.latestHeight !== undefined) {\n            client_1.Height.encode(message.latestHeight, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.proofSpecs) {\n            proofs_1.ProofSpec.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.upgradePath) {\n            writer.uint32(74).string(v);\n        }\n        if (message.allowUpdateAfterExpiry === true) {\n            writer.uint32(80).bool(message.allowUpdateAfterExpiry);\n        }\n        if (message.allowUpdateAfterMisbehaviour === true) {\n            writer.uint32(88).bool(message.allowUpdateAfterMisbehaviour);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseClientState);\n        message.proofSpecs = [];\n        message.upgradePath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.trustLevel = exports.Fraction.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.trustingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.unbondingPeriod = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.maxClockDrift = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.frozenHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.latestHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofSpecs.push(proofs_1.ProofSpec.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.upgradePath.push(reader.string());\n                    break;\n                case 10:\n                    message.allowUpdateAfterExpiry = reader.bool();\n                    break;\n                case 11:\n                    message.allowUpdateAfterMisbehaviour = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseClientState);\n        message.proofSpecs = [];\n        message.upgradePath = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.trustLevel !== undefined && object.trustLevel !== null) {\n            message.trustLevel = exports.Fraction.fromJSON(object.trustLevel);\n        }\n        else {\n            message.trustLevel = undefined;\n        }\n        if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n            message.trustingPeriod = duration_1.Duration.fromJSON(object.trustingPeriod);\n        }\n        else {\n            message.trustingPeriod = undefined;\n        }\n        if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n            message.unbondingPeriod = duration_1.Duration.fromJSON(object.unbondingPeriod);\n        }\n        else {\n            message.unbondingPeriod = undefined;\n        }\n        if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n            message.maxClockDrift = duration_1.Duration.fromJSON(object.maxClockDrift);\n        }\n        else {\n            message.maxClockDrift = undefined;\n        }\n        if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n            message.frozenHeight = client_1.Height.fromJSON(object.frozenHeight);\n        }\n        else {\n            message.frozenHeight = undefined;\n        }\n        if (object.latestHeight !== undefined && object.latestHeight !== null) {\n            message.latestHeight = client_1.Height.fromJSON(object.latestHeight);\n        }\n        else {\n            message.latestHeight = undefined;\n        }\n        if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n            for (const e of object.proofSpecs) {\n                message.proofSpecs.push(proofs_1.ProofSpec.fromJSON(e));\n            }\n        }\n        if (object.upgradePath !== undefined && object.upgradePath !== null) {\n            for (const e of object.upgradePath) {\n                message.upgradePath.push(String(e));\n            }\n        }\n        if (object.allowUpdateAfterExpiry !== undefined && object.allowUpdateAfterExpiry !== null) {\n            message.allowUpdateAfterExpiry = Boolean(object.allowUpdateAfterExpiry);\n        }\n        else {\n            message.allowUpdateAfterExpiry = false;\n        }\n        if (object.allowUpdateAfterMisbehaviour !== undefined && object.allowUpdateAfterMisbehaviour !== null) {\n            message.allowUpdateAfterMisbehaviour = Boolean(object.allowUpdateAfterMisbehaviour);\n        }\n        else {\n            message.allowUpdateAfterMisbehaviour = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.trustLevel !== undefined &&\n            (obj.trustLevel = message.trustLevel ? exports.Fraction.toJSON(message.trustLevel) : undefined);\n        message.trustingPeriod !== undefined &&\n            (obj.trustingPeriod = message.trustingPeriod ? duration_1.Duration.toJSON(message.trustingPeriod) : undefined);\n        message.unbondingPeriod !== undefined &&\n            (obj.unbondingPeriod = message.unbondingPeriod ? duration_1.Duration.toJSON(message.unbondingPeriod) : undefined);\n        message.maxClockDrift !== undefined &&\n            (obj.maxClockDrift = message.maxClockDrift ? duration_1.Duration.toJSON(message.maxClockDrift) : undefined);\n        message.frozenHeight !== undefined &&\n            (obj.frozenHeight = message.frozenHeight ? client_1.Height.toJSON(message.frozenHeight) : undefined);\n        message.latestHeight !== undefined &&\n            (obj.latestHeight = message.latestHeight ? client_1.Height.toJSON(message.latestHeight) : undefined);\n        if (message.proofSpecs) {\n            obj.proofSpecs = message.proofSpecs.map((e) => (e ? proofs_1.ProofSpec.toJSON(e) : undefined));\n        }\n        else {\n            obj.proofSpecs = [];\n        }\n        if (message.upgradePath) {\n            obj.upgradePath = message.upgradePath.map((e) => e);\n        }\n        else {\n            obj.upgradePath = [];\n        }\n        message.allowUpdateAfterExpiry !== undefined &&\n            (obj.allowUpdateAfterExpiry = message.allowUpdateAfterExpiry);\n        message.allowUpdateAfterMisbehaviour !== undefined &&\n            (obj.allowUpdateAfterMisbehaviour = message.allowUpdateAfterMisbehaviour);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseClientState);\n        message.proofSpecs = [];\n        message.upgradePath = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.trustLevel !== undefined && object.trustLevel !== null) {\n            message.trustLevel = exports.Fraction.fromPartial(object.trustLevel);\n        }\n        else {\n            message.trustLevel = undefined;\n        }\n        if (object.trustingPeriod !== undefined && object.trustingPeriod !== null) {\n            message.trustingPeriod = duration_1.Duration.fromPartial(object.trustingPeriod);\n        }\n        else {\n            message.trustingPeriod = undefined;\n        }\n        if (object.unbondingPeriod !== undefined && object.unbondingPeriod !== null) {\n            message.unbondingPeriod = duration_1.Duration.fromPartial(object.unbondingPeriod);\n        }\n        else {\n            message.unbondingPeriod = undefined;\n        }\n        if (object.maxClockDrift !== undefined && object.maxClockDrift !== null) {\n            message.maxClockDrift = duration_1.Duration.fromPartial(object.maxClockDrift);\n        }\n        else {\n            message.maxClockDrift = undefined;\n        }\n        if (object.frozenHeight !== undefined && object.frozenHeight !== null) {\n            message.frozenHeight = client_1.Height.fromPartial(object.frozenHeight);\n        }\n        else {\n            message.frozenHeight = undefined;\n        }\n        if (object.latestHeight !== undefined && object.latestHeight !== null) {\n            message.latestHeight = client_1.Height.fromPartial(object.latestHeight);\n        }\n        else {\n            message.latestHeight = undefined;\n        }\n        if (object.proofSpecs !== undefined && object.proofSpecs !== null) {\n            for (const e of object.proofSpecs) {\n                message.proofSpecs.push(proofs_1.ProofSpec.fromPartial(e));\n            }\n        }\n        if (object.upgradePath !== undefined && object.upgradePath !== null) {\n            for (const e of object.upgradePath) {\n                message.upgradePath.push(e);\n            }\n        }\n        if (object.allowUpdateAfterExpiry !== undefined && object.allowUpdateAfterExpiry !== null) {\n            message.allowUpdateAfterExpiry = object.allowUpdateAfterExpiry;\n        }\n        else {\n            message.allowUpdateAfterExpiry = false;\n        }\n        if (object.allowUpdateAfterMisbehaviour !== undefined && object.allowUpdateAfterMisbehaviour !== null) {\n            message.allowUpdateAfterMisbehaviour = object.allowUpdateAfterMisbehaviour;\n        }\n        else {\n            message.allowUpdateAfterMisbehaviour = false;\n        }\n        return message;\n    },\n};\nconst baseConsensusState = {};\nexports.ConsensusState = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.root !== undefined) {\n            commitment_1.MerkleRoot.encode(message.root, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(26).bytes(message.nextValidatorsHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseConsensusState);\n        message.nextValidatorsHash = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.timestamp = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.root = commitment_1.MerkleRoot.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseConsensusState);\n        message.nextValidatorsHash = new Uint8Array();\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.root !== undefined && object.root !== null) {\n            message.root = commitment_1.MerkleRoot.fromJSON(object.root);\n        }\n        else {\n            message.root = undefined;\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n        message.root !== undefined && (obj.root = message.root ? commitment_1.MerkleRoot.toJSON(message.root) : undefined);\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseConsensusState);\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.root !== undefined && object.root !== null) {\n            message.root = commitment_1.MerkleRoot.fromPartial(object.root);\n        }\n        else {\n            message.root = undefined;\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMisbehaviour = { clientId: \"\" };\nexports.Misbehaviour = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header1 !== undefined) {\n            exports.Header.encode(message.header1, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.header2 !== undefined) {\n            exports.Header.encode(message.header2, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMisbehaviour);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header1 = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.header2 = exports.Header.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMisbehaviour);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header1 !== undefined && object.header1 !== null) {\n            message.header1 = exports.Header.fromJSON(object.header1);\n        }\n        else {\n            message.header1 = undefined;\n        }\n        if (object.header2 !== undefined && object.header2 !== null) {\n            message.header2 = exports.Header.fromJSON(object.header2);\n        }\n        else {\n            message.header2 = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header1 !== undefined &&\n            (obj.header1 = message.header1 ? exports.Header.toJSON(message.header1) : undefined);\n        message.header2 !== undefined &&\n            (obj.header2 = message.header2 ? exports.Header.toJSON(message.header2) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMisbehaviour);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header1 !== undefined && object.header1 !== null) {\n            message.header1 = exports.Header.fromPartial(object.header1);\n        }\n        else {\n            message.header1 = undefined;\n        }\n        if (object.header2 !== undefined && object.header2 !== null) {\n            message.header2 = exports.Header.fromPartial(object.header2);\n        }\n        else {\n            message.header2 = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = {};\nexports.Header = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            types_1.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.trustedHeight !== undefined) {\n            client_1.Height.encode(message.trustedHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.trustedValidators !== undefined) {\n            validator_1.ValidatorSet.encode(message.trustedValidators, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHeader);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = types_1.SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.trustedHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.trustedValidators = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHeader);\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = types_1.SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n            message.trustedHeight = client_1.Height.fromJSON(object.trustedHeight);\n        }\n        else {\n            message.trustedHeight = undefined;\n        }\n        if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n            message.trustedValidators = validator_1.ValidatorSet.fromJSON(object.trustedValidators);\n        }\n        else {\n            message.trustedValidators = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader ? types_1.SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n        message.trustedHeight !== undefined &&\n            (obj.trustedHeight = message.trustedHeight ? client_1.Height.toJSON(message.trustedHeight) : undefined);\n        message.trustedValidators !== undefined &&\n            (obj.trustedValidators = message.trustedValidators\n                ? validator_1.ValidatorSet.toJSON(message.trustedValidators)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHeader);\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = types_1.SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        if (object.trustedHeight !== undefined && object.trustedHeight !== null) {\n            message.trustedHeight = client_1.Height.fromPartial(object.trustedHeight);\n        }\n        else {\n            message.trustedHeight = undefined;\n        }\n        if (object.trustedValidators !== undefined && object.trustedValidators !== null) {\n            message.trustedValidators = validator_1.ValidatorSet.fromPartial(object.trustedValidators);\n        }\n        else {\n            message.trustedValidators = undefined;\n        }\n        return message;\n    },\n};\nconst baseFraction = { numerator: long_1.default.UZERO, denominator: long_1.default.UZERO };\nexports.Fraction = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.numerator.isZero()) {\n            writer.uint32(8).uint64(message.numerator);\n        }\n        if (!message.denominator.isZero()) {\n            writer.uint32(16).uint64(message.denominator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseFraction);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.numerator = reader.uint64();\n                    break;\n                case 2:\n                    message.denominator = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseFraction);\n        if (object.numerator !== undefined && object.numerator !== null) {\n            message.numerator = long_1.default.fromString(object.numerator);\n        }\n        else {\n            message.numerator = long_1.default.UZERO;\n        }\n        if (object.denominator !== undefined && object.denominator !== null) {\n            message.denominator = long_1.default.fromString(object.denominator);\n        }\n        else {\n            message.denominator = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.numerator !== undefined && (obj.numerator = (message.numerator || long_1.default.UZERO).toString());\n        message.denominator !== undefined && (obj.denominator = (message.denominator || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseFraction);\n        if (object.numerator !== undefined && object.numerator !== null) {\n            message.numerator = object.numerator;\n        }\n        else {\n            message.numerator = long_1.default.UZERO;\n        }\n        if (object.denominator !== undefined && object.denominator !== null) {\n            message.denominator = object.denominator;\n        }\n        else {\n            message.denominator = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=tendermint.js.map"]},"metadata":{},"sourceType":"script"}